openapi: 3.0.3
info:
  title: Sentineliq API
  version: v1
  description: Enterprise-grade API for security event management with multi-tenant
    architecture
paths:
  /api/companies/:
    get:
      operationId: api_companies_list
      description: Get a paginated list of companies the user has access to. Superusers
        see all companies, while regular users only see their own.
      summary: List all companies
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
      tags:
      - Company Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyList'
          description: ''
    post:
      operationId: api_companies_create
      description: Creates a new company and an associated admin user. Only superadmins
        can perform this action.
      summary: Create company with admin
      tags:
      - Company Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyCreateRequest'
            examples:
              CompanyCreationExample:
                value:
                  name: Nome da Empresa
                  admin_user:
                    email: admin@empresa.com
                    password: senhasegura123
                    username: admin_empresa
                    first_name: Admin
                    last_name: Empresa
                summary: Company Creation Example
              CreateExample:
                value:
                  name: Example Company
                  admin_user:
                    username: admin_company
                    email: admin@company.com
                    password: secure_password
                    first_name: Admin
                    last_name: Company
                summary: Create Example
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCreate'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid input data
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Not authorized to create companies
          description: ''
  /api/companies/{id}/:
    get:
      operationId: api_companies_retrieve
      description: Retrieve detailed information about a specific company, including
        associated users.
      summary: Get company details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDetail'
          description: ''
    put:
      operationId: api_companies_update
      description: Update all fields of an existing company. Only accessible to superusers.
      summary: Update a company
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    patch:
      operationId: api_companies_partial_update
      description: Update specific fields of an existing company. Only accessible
        to superusers.
      summary: Partially update a company
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    delete:
      operationId: api_companies_destroy
      description: Permanently delete a company and all associated data. Only accessible
        to superusers.
      summary: Delete a company
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/companies/{id}/deactivate-users/:
    post:
      operationId: api_companies_deactivate_users_create
      description: Deactivates multiple user accounts within a company simultaneously.
        This endpoint is critical for security operations when off-boarding multiple
        employees or when responding to potential account compromises. Company administrators
        and platform superusers can use this feature to quickly revoke access for
        multiple users. The operation preserves user data for audit purposes while
        preventing further system access. Safety measures prevent company administrators
        from deactivating other administrators, which requires superuser privileges.
      summary: Deactivate multiple users
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeactivateUsersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeactivateUsersRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeactivateUsersRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Users deactivated successfully
        '400':
          description: Invalid request
        '403':
          description: Permission denied
  /api/companies/{id}/statistics/:
    get:
      operationId: api_companies_statistics_retrieve
      description: Retrieves comprehensive statistics about a company's security operations.
        This endpoint provides key metrics including user counts, alert statistics,
        and incident data. Security leaders use this information to assess the operational
        status of their security program, understand alert volume and resolution rates,
        and monitor incident response effectiveness. The statistics are essential
        for capacity planning, resource allocation, and performance measurement in
        security operations centers (SOCs). Multi-tenant isolation ensures that each
        company only sees their own statistics.
      summary: Get company statistics
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Statistics retrieved successfully
        '403':
          description: Permission denied
  /api/companies/{id}/user-stats/:
    get:
      operationId: api_companies_user_stats_retrieve
      description: Retrieves detailed user statistics for a company, including breakdowns
        by role and status. This endpoint provides a more in-depth view of the user
        base than the basic statistics endpoint. Security administrators use this
        information to monitor team composition, track analyst-to-admin ratios, and
        manage user accounts. This information supports team planning, access management,
        and security governance processes. Access is restricted to company administrators
        and platform superusers to protect sensitive organizational information.
      summary: Get detailed user statistics
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: User statistics retrieved successfully
        '403':
          description: Permission denied
  /api/companies/{id}/users/:
    get:
      operationId: api_companies_users_retrieve
      description: Retrieves all users belonging to the specified company. This endpoint
        is crucial for tenant management in the multi-tenant SOAR platform. It provides
        visibility into user accounts within an organization, allowing administrators
        to manage access and permissions. The list includes user details such as username,
        email, role, and active status. This information is used for user administration,
        audit, and governance purposes within the security operations team.
      summary: List company users
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Users retrieved successfully
        '403':
          description: Permission denied
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      security:
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/:
    get:
      operationId: api_users_list
      description: API endpoint for users.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Authentication & Access Control
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_users_create
      description: API endpoint for users.
      tags:
      - Authentication & Access Control
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      description: API endpoint for users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - Authentication & Access Control
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      description: API endpoint for users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - Authentication & Access Control
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      description: API endpoint for users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - Authentication & Access Control
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      description: API endpoint for users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - Authentication & Access Control
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/users/me/:
    get:
      operationId: api_users_me_retrieve
      description: Get the current user's profile
      tags:
      - Authentication & Access Control
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/alerts/:
    get:
      operationId: alerts_list
      description: Returns a paginated list of alerts that the current user has permission
        to view.
      summary: List all alerts with filtering and pagination
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: date_after
        schema:
          type: string
          format: date-time
      - in: query
        name: date_before
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: has_tag
        schema:
          type: string
      - in: query
        name: ordering
        schema:
          type: string
          enum:
          - -created_at
          - -severity
          - -status
          - created_at
          - severity
          - status
        description: Order results by field
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: pap
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
        description: Search in title, description, and source
      - in: query
        name: severity
        schema:
          type: string
          enum:
          - critical
          - high
          - low
          - medium
        description: Filter by severity level
      - in: query
        name: source
        schema:
          type: string
      - in: query
        name: source_ref
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - escalated
          - in_progress
          - new
          - resolved
        description: Filter by alert status
      - in: query
        name: title
        schema:
          type: string
      - in: query
        name: tlp
        schema:
          type: integer
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
      tags:
      - Alert Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAlertList'
          description: ''
    post:
      operationId: alerts_create
      description: Creates a new alert in the system.
      summary: Create a new alert
      tags:
      - Alert Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlertCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: ''
  /api/v1/alerts/{id}/:
    get:
      operationId: alerts_retrieve
      description: Returns detailed information about a specific alert, including
        related observables.
      summary: Retrieve a specific alert
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert.
        required: true
      tags:
      - Alert Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDetail'
          description: ''
    put:
      operationId: alerts_update
      description: Updates an existing alert. Cannot change status to 'escalated'
        directly.
      summary: Update an alert
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert.
        required: true
      tags:
      - Alert Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlertUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: ''
    patch:
      operationId: alerts_partial_update
      description: Partially updates an existing alert. Cannot change status to 'escalated'
        directly.
      summary: Partially update an alert
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert.
        required: true
      tags:
      - Alert Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlertUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlertUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlertUpdateRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: ''
    delete:
      operationId: alerts_destroy
      description: Deletes an alert from the system.
      summary: Delete an alert
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert.
        required: true
      tags:
      - Alert Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/alerts/{id}/add-observable/:
    post:
      operationId: alerts_add_observable_create
      description: Links an existing observable to this alert.
      summary: Add observable to alert
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert.
        required: true
      tags:
      - Alert Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservableAddToAlertRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservableAddToAlertRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservableAddToAlertRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservableLight'
          description: Observable added successfully
        '400':
          description: Invalid data
        '409':
          description: Observable already linked to this alert
  /api/v1/alerts/{id}/escalate/:
    post:
      operationId: alerts_escalate_create
      description: Converts an alert to an incident by creating a new incident linked
        to this alert and changes the alert status to 'escalated'. This is a key action
        in the security operations workflow when an alert requires formal investigation.
        The newly created incident will inherit severity, tags, TLP, and PAP settings
        from the source alert.
      summary: Escalate alert to incident
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert.
        required: true
      tags:
      - Alert Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlertRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                SuccessResponse:
                  value:
                    status: success
                    message: Alert escalated to incident successfully.
                    data:
                      incident_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  summary: Successful escalation
                  description: The alert was successfully escalated to an incident
          description: Alert successfully escalated
        '400':
          description: Alert already escalated
        '403':
          description: Permission denied
        '500':
          description: Server error
  /api/v1/alerts/{id}/observables/:
    get:
      operationId: alerts_observables_list
      description: Lists all observables associated with this alert.
      summary: List observables in alert
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: date_after
        schema:
          type: string
          format: date-time
      - in: query
        name: date_before
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: has_tag
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: pap
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: severity
        schema:
          type: string
          enum:
          - critical
          - high
          - low
          - medium
        description: |-
          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `critical` - Critical
      - in: query
        name: source
        schema:
          type: string
      - in: query
        name: source_ref
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - escalated
          - in_progress
          - new
          - resolved
        description: |-
          * `new` - New
          * `in_progress` - In Progress
          * `resolved` - Resolved
          * `escalated` - Escalated
      - in: query
        name: title
        schema:
          type: string
      - in: query
        name: tlp
        schema:
          type: integer
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
      tags:
      - Alert Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObservableLightList'
          description: ''
  /api/v1/alerts/{id}/remove-observable/{observable_id}/:
    delete:
      operationId: alerts_remove_observable_destroy
      description: Removes the link between an observable and this alert.
      summary: Remove observable from alert
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert.
        required: true
      - in: path
        name: observable_id
        schema:
          type: string
        description: UUID of the observable to remove (UUID format)
        required: true
      tags:
      - Alert Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Observable removed successfully
        '404':
          description: Observable not found in this alert
        '500':
          description: Server error
  /api/v1/alerts/{id}/sync-from-json/:
    post:
      operationId: alerts_sync_from_json_create
      description: Convert observables stored in observable_data JSON field to proper
        M2M relationships.
      summary: Sync observables from JSON
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert.
        required: true
      tags:
      - Alert Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlertRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: Observables synchronized successfully
        '500':
          description: Server error
  /api/v1/alerts/{id}/trigger-pipeline/:
    post:
      operationId: alerts_trigger_pipeline_create
      description: Runs a SentinelVision enrichment pipeline on this alert.
      summary: Trigger SentinelVision pipeline
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert.
        required: true
      - in: query
        name: pipeline
        schema:
          type: string
        description: Name of the pipeline to run (optional)
      tags:
      - Alert Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlertRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: Pipeline triggered successfully
        '500':
          description: Server error
  /api/v1/alerts/ingest/:
    post:
      operationId: alerts_ingest_create
      description: Endpoint for external systems to send alerts to SentinelIQ with
        automatic deduplication. This API allows integration with various security
        tools and threat intelligence platforms. Alerts are automatically deduplicated
        based on source_ref and external_source fields. If a matching alert already
        exists, the API will return a success response with the duplicate flag set
        to true. Observables (IOCs) can be included in the observable_data field and
        will be processed accordingly.
      summary: Ingest alerts from external systems
      tags:
      - Alert Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertCreateRequest'
            examples:
              SimpleAlert:
                value:
                  title: Suspicious Login Attempt
                  description: Multiple failed login attempts detected from IP 192.168.1.100
                  severity: medium
                  source: WAF
                  source_ref: WAF-ALERT-123456
                  tlp: 2
                  tags:
                  - authentication
                  - brute-force
                summary: Simple alert ingestion
                description: Basic alert with required fields
              CompleteAlert:
                value:
                  title: 'Malware Detection: Emotet Variant'
                  description: Emotet malware variant detected on workstation
                  severity: high
                  source: EDR
                  source_ref: EDR-ALERT-789012
                  tlp: 2
                  tags:
                  - malware
                  - emotet
                  - workstation
                  observable_data:
                    ip:
                    - 10.0.0.15
                    - 185.23.45.67
                    file_hash:
                    - 44d88612fea8a8f36de82e1278abb02f
                    domain:
                    - malicious-domain.com
                summary: Complete alert with observables
                description: Alert with observables included
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlertCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                SimpleAlert:
                  value:
                    title: Suspicious Login Attempt
                    description: Multiple failed login attempts detected from IP 192.168.1.100
                    severity: medium
                    source: WAF
                    source_ref: WAF-ALERT-123456
                    tlp: 2
                    tags:
                    - authentication
                    - brute-force
                  summary: Simple alert ingestion
                  description: Basic alert with required fields
                CompleteAlert:
                  value:
                    title: 'Malware Detection: Emotet Variant'
                    description: Emotet malware variant detected on workstation
                    severity: high
                    source: EDR
                    source_ref: EDR-ALERT-789012
                    tlp: 2
                    tags:
                    - malware
                    - emotet
                    - workstation
                    observable_data:
                      ip:
                      - 10.0.0.15
                      - 185.23.45.67
                      file_hash:
                      - 44d88612fea8a8f36de82e1278abb02f
                      domain:
                      - malicious-domain.com
                  summary: Complete alert with observables
                  description: Alert with observables included
                SuccessCreated:
                  value:
                    status: success
                    message: Alert successfully ingested.
                    data:
                      alert_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      duplicate: false
                  summary: New alert created
                  description: Alert was successfully created as it didn't exist before
          description: Alert successfully ingested
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                SimpleAlert:
                  value:
                    title: Suspicious Login Attempt
                    description: Multiple failed login attempts detected from IP 192.168.1.100
                    severity: medium
                    source: WAF
                    source_ref: WAF-ALERT-123456
                    tlp: 2
                    tags:
                    - authentication
                    - brute-force
                  summary: Simple alert ingestion
                  description: Basic alert with required fields
                CompleteAlert:
                  value:
                    title: 'Malware Detection: Emotet Variant'
                    description: Emotet malware variant detected on workstation
                    severity: high
                    source: EDR
                    source_ref: EDR-ALERT-789012
                    tlp: 2
                    tags:
                    - malware
                    - emotet
                    - workstation
                    observable_data:
                      ip:
                      - 10.0.0.15
                      - 185.23.45.67
                      file_hash:
                      - 44d88612fea8a8f36de82e1278abb02f
                      domain:
                      - malicious-domain.com
                  summary: Complete alert with observables
                  description: Alert with observables included
                SuccessDuplicate:
                  value:
                    status: success
                    message: Alert already exists.
                    data:
                      alert_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      duplicate: true
                  summary: Duplicate alert detected
                  description: Alert with the same source_ref and external_source
                    already exists
          description: Alert already exists (duplicate)
        '400':
          description: Invalid alert data
        '403':
          description: Permission denied
        '500':
          description: Server error
  /api/v1/auth/token/:
    post:
      operationId: auth_token_create
      description: Get a JWT token using username and password. The response includes
        both access and refresh tokens, along with the user's information including
        role and company. Use the access token in the Authorization header like 'Bearer
        <token>' for authenticated API requests. If the token expires, use the refresh
        token endpoint to get a new token.
      summary: Obtain JWT token via username
      tags:
      - Authentication & Access Control
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
            examples:
              AdminLogin:
                value:
                  username: admin_company
                  password: secure-password-example
                summary: Authentication as admin
                description: Use these credentials for an admin user
              AnalystLogin:
                value:
                  username: analyst_user
                  password: secure-password-example
                summary: Authentication as analyst
                description: Use these credentials for an analyst user
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
        required: true
      security:
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPairResponse'
              examples:
                SuccessResponse:
                  value:
                    status: success
                    message: Authentication successful
                    data:
                      access: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      refresh: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      user:
                        id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        username: admin_company
                        email: admin@company.com
                        role: admin_company
                        is_superuser: false
                        first_name: Admin
                        last_name: User
                        company: 5fa85f64-5717-4562-b3fc-2c963f66def9
                        company_name: Acme Corporation
                  summary: Successful authentication
                  description: Authentication successful with tokens and user details
          description: JWT token and user information
        '401':
          description: Invalid credentials
  /api/v1/auth/token/email/:
    post:
      operationId: auth_token_email_create
      description: Get a JWT token using email and password instead of username and
        password. This endpoint is particularly useful for integration with email-based
        systems. The response includes access and refresh tokens along with user details.
        For API authentication, include the access token in the Authorization header
        as 'Bearer <token>'. Access tokens expire as configured in the JWT settings.
      summary: Obtain JWT token via email
      tags:
      - Authentication & Access Control
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailPasswordTokenObtainRequest'
            examples:
              EmailLogin:
                value:
                  email: analyst@company.com
                  password: secure-password-example
                summary: Authentication via email
                description: Use email and password for authentication
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailPasswordTokenObtainRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailPasswordTokenObtainRequest'
        required: true
      security:
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPairResponse'
              examples:
                SuccessResponse:
                  value:
                    status: success
                    message: Authentication successful
                    data:
                      access: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      refresh: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      user:
                        id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        username: analyst_user
                        email: analyst@company.com
                        role: analyst_company
                        is_superuser: false
                        first_name: Analyst
                        last_name: User
                        company: 5fa85f64-5717-4562-b3fc-2c963f66def9
                        company_name: Acme Corporation
                  summary: Successful authentication
                  description: Authentication successful with tokens and user details
          description: JWT token and user information
        '401':
          description: Invalid credentials
  /api/v1/auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: Refresh an existing JWT token to extend its validity. Use this
        endpoint when your access token expires but you still have a valid refresh
        token. The response includes a new access token. Refresh tokens have a longer
        lifetime but are rotated for security. Include the refresh token in the request
        body.
      summary: Refresh JWT token
      tags:
      - Authentication & Access Control
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshResponseRequest'
            examples:
              RefreshToken:
                value:
                  refresh: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                summary: Token refresh request
                description: Request with refresh token to get a new access token
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshResponseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshResponseRequest'
        required: true
      security:
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: New access token
        '401':
          description: Invalid or expired token
  /api/v1/auth/users/:
    get:
      operationId: auth_users_list
      description: Returns a list of all users the current user has permission to
        view, with pagination.
      summary: List all users
      parameters:
      - in: query
        name: company
        schema:
          type: string
          format: uuid
      - in: query
        name: date_joined_after
        schema:
          type: string
          format: date-time
      - in: query
        name: date_joined_before
        schema:
          type: string
          format: date-time
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: first_name
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_admin_company
        schema:
          type: boolean
      - in: query
        name: is_analyst_company
        schema:
          type: boolean
      - in: query
        name: is_superuser
        schema:
          type: boolean
      - in: query
        name: last_name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: username
        schema:
          type: string
      tags:
      - Authentication & Access Control
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Success
    post:
      operationId: auth_users_create
      description: Creates a new user account with the provided data.
      summary: Create a new user
      tags:
      - Authentication & Access Control
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/APIUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/APIUserRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid request data
  /api/v1/auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      description: Returns detailed information about a specific user.
      summary: Retrieve user details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - Authentication & Access Control
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Success
        '404':
          description: User not found
    put:
      operationId: auth_users_update
      description: Updates all fields of an existing user.
      summary: Update a user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - Authentication & Access Control
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/APIUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/APIUserRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: User updated successfully
    patch:
      operationId: auth_users_partial_update
      description: Updates specific fields of an existing user.
      summary: Partially update a user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - Authentication & Access Control
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAPIUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAPIUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAPIUserRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: User updated successfully
    delete:
      operationId: auth_users_destroy
      description: Permanently deletes a user from the system.
      summary: Delete a user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - Authentication & Access Control
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: User deleted successfully
        '403':
          description: Permission denied
  /api/v1/auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      description: |-
        Get the current user's profile.

        Returns:
            The serialized user data of the authenticated user.
      tags:
      - Authentication & Access Control
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIUser'
          description: ''
  /api/v1/common/health-check/:
    get:
      operationId: common_health_check_retrieve
      description: Returns a 200 OK if the API is up and running
      summary: Health check endpoint
      tags:
      - System Monitoring & Operations
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      - {}
      responses:
        '200':
          description: API is healthy
  /api/v1/common/test-sentry/:
    get:
      operationId: common_test_sentry_retrieve
      description: Endpoint to test if Sentry error reporting is working correctly.
        Admin only.
      summary: Test Sentry integration
      tags:
      - System Monitoring & Operations
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Success message with transaction ID
        '500':
          description: Deliberate error to test Sentry
  /api/v1/common/whoami/:
    get:
      operationId: common_whoami_retrieve
      description: Returns information about the currently authenticated user
      summary: Current user information
      tags:
      - System Monitoring & Operations
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Successfully retrieved user information
        '401':
          description: User is not authenticated
  /api/v1/companies/:
    get:
      operationId: companies_list
      description: Get a paginated list of companies the user has access to. Superusers
        see all companies, while regular users only see their own.
      summary: List all companies
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
      tags:
      - Company Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyList'
          description: ''
    post:
      operationId: companies_create
      description: Creates a new company and an associated admin user. Only superadmins
        can perform this action.
      summary: Create company with admin
      tags:
      - Company Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyCreateRequest'
            examples:
              CompanyCreationExample:
                value:
                  name: Nome da Empresa
                  admin_user:
                    email: admin@empresa.com
                    password: senhasegura123
                    username: admin_empresa
                    first_name: Admin
                    last_name: Empresa
                summary: Company Creation Example
              CreateExample:
                value:
                  name: Example Company
                  admin_user:
                    username: admin_company
                    email: admin@company.com
                    password: secure_password
                    first_name: Admin
                    last_name: Company
                summary: Create Example
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyCreate'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid input data
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Not authorized to create companies
          description: ''
  /api/v1/companies/{id}/:
    get:
      operationId: companies_retrieve
      description: Retrieve detailed information about a specific company, including
        associated users.
      summary: Get company details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDetail'
          description: ''
    put:
      operationId: companies_update
      description: Update all fields of an existing company. Only accessible to superusers.
      summary: Update a company
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    patch:
      operationId: companies_partial_update
      description: Update specific fields of an existing company. Only accessible
        to superusers.
      summary: Partially update a company
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    delete:
      operationId: companies_destroy
      description: Permanently delete a company and all associated data. Only accessible
        to superusers.
      summary: Delete a company
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/companies/{id}/deactivate-users/:
    post:
      operationId: companies_deactivate_users_create
      description: Deactivates multiple user accounts within a company simultaneously.
        This endpoint is critical for security operations when off-boarding multiple
        employees or when responding to potential account compromises. Company administrators
        and platform superusers can use this feature to quickly revoke access for
        multiple users. The operation preserves user data for audit purposes while
        preventing further system access. Safety measures prevent company administrators
        from deactivating other administrators, which requires superuser privileges.
      summary: Deactivate multiple users
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeactivateUsersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeactivateUsersRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeactivateUsersRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Users deactivated successfully
        '400':
          description: Invalid request
        '403':
          description: Permission denied
  /api/v1/companies/{id}/statistics/:
    get:
      operationId: companies_statistics_retrieve
      description: Retrieves comprehensive statistics about a company's security operations.
        This endpoint provides key metrics including user counts, alert statistics,
        and incident data. Security leaders use this information to assess the operational
        status of their security program, understand alert volume and resolution rates,
        and monitor incident response effectiveness. The statistics are essential
        for capacity planning, resource allocation, and performance measurement in
        security operations centers (SOCs). Multi-tenant isolation ensures that each
        company only sees their own statistics.
      summary: Get company statistics
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Statistics retrieved successfully
        '403':
          description: Permission denied
  /api/v1/companies/{id}/user-stats/:
    get:
      operationId: companies_user_stats_retrieve
      description: Retrieves detailed user statistics for a company, including breakdowns
        by role and status. This endpoint provides a more in-depth view of the user
        base than the basic statistics endpoint. Security administrators use this
        information to monitor team composition, track analyst-to-admin ratios, and
        manage user accounts. This information supports team planning, access management,
        and security governance processes. Access is restricted to company administrators
        and platform superusers to protect sensitive organizational information.
      summary: Get detailed user statistics
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: User statistics retrieved successfully
        '403':
          description: Permission denied
  /api/v1/companies/{id}/users/:
    get:
      operationId: companies_users_retrieve
      description: Retrieves all users belonging to the specified company. This endpoint
        is crucial for tenant management in the multi-tenant SOAR platform. It provides
        visibility into user accounts within an organization, allowing administrators
        to manage access and permissions. The list includes user details such as username,
        email, role, and active status. This information is used for user administration,
        audit, and governance purposes within the security operations team.
      summary: List company users
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - Company Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Users retrieved successfully
        '403':
          description: Permission denied
  /api/v1/incidents/:
    get:
      operationId: incidents_list
      description: Returns a paginated list of incidents that the current user has
        permission to view.
      summary: List all incidents with filtering and pagination
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: end_date_after
        schema:
          type: string
          format: date-time
      - in: query
        name: end_date_before
        schema:
          type: string
          format: date-time
      - in: query
        name: has_alerts
        schema:
          type: boolean
      - in: query
        name: has_tag
        schema:
          type: string
      - in: query
        name: ordering
        schema:
          type: string
          enum:
          - -created_at
          - -severity
          - -status
          - created_at
          - severity
          - status
        description: Order results by field
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: pap
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
        description: Search in title, description, and summary
      - in: query
        name: severity
        schema:
          type: string
          enum:
          - critical
          - high
          - low
          - medium
        description: Filter by severity level
      - in: query
        name: start_date_after
        schema:
          type: string
          format: date-time
      - in: query
        name: start_date_before
        schema:
          type: string
          format: date-time
      - in: query
        name: status
        schema:
          type: string
          enum:
          - closed
          - in_progress
          - open
          - resolved
        description: Filter by incident status
      - in: query
        name: title
        schema:
          type: string
      - in: query
        name: tlp
        schema:
          type: integer
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
      tags:
      - Incident Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIncidentList'
          description: ''
    post:
      operationId: incidents_create
      description: Creates a new incident in the system.
      summary: Create a new incident
      tags:
      - Incident Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          description: ''
  /api/v1/incidents/{id}/:
    get:
      operationId: incidents_retrieve
      description: Returns detailed information about a specific incident, including
        related alerts and observables.
      summary: Retrieve a specific incident
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      tags:
      - Incident Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentDetail'
          description: ''
    put:
      operationId: incidents_update
      description: Updates an existing incident.
      summary: Update an incident
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      tags:
      - Incident Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          description: ''
    patch:
      operationId: incidents_partial_update
      description: Partially updates an existing incident.
      summary: Partially update an incident
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      tags:
      - Incident Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIncidentUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIncidentUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIncidentUpdateRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          description: ''
    delete:
      operationId: incidents_destroy
      description: Deletes an incident from the system.
      summary: Delete an incident
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      tags:
      - Incident Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/incidents/{id}/add-observable/:
    post:
      operationId: incidents_add_observable_create
      description: Adds an observable to this incident.
      summary: Add observable
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      tags:
      - Incident Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentObservableCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentObservableCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentObservableCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentObservable'
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentObservable'
          description: ''
        '400':
          description: Invalid observable data
  /api/v1/incidents/{id}/add-task/:
    post:
      operationId: incidents_add_task_create
      description: Creates a new task associated with this incident. Tasks are crucial
        elements of security incident response that allow teams to track and delegate
        specific actions required during an investigation. Each task includes a title,
        description, status, priority, due date, and can be assigned to specific analysts.
        Tasks also appear in the incident timeline for comprehensive tracking of all
        incident activities.
      summary: Add task to incident
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      tags:
      - Incident Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTaskCreateRequest'
            examples:
              SimpleTask:
                value:
                  title: Block malicious IP at firewall
                  description: Add IP 185.23.45.67 to firewall blocklist
                summary: Basic incident task
                description: A simple task with minimal required fields
              CompleteTask:
                value:
                  title: Collect and analyze memory dump
                  description: Acquire memory dump from affected server and analyze
                    for indicators of compromise
                  status: in_progress
                  priority: high
                  due_date: '2023-07-18T16:00:00Z'
                  assignee: 5fa85f64-5717-4562-b3fc-2c963f66def9
                summary: Comprehensive incident task
                description: A complete task with all available fields
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentTaskCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentTaskCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          description: Task successfully created
        '400':
          description: Invalid task data
        '403':
          description: Permission denied
        '500':
          description: Server error
  /api/v1/incidents/{id}/add-timeline-entry/:
    post:
      operationId: incidents_add_timeline_entry_create
      description: Adds a new entry to the incident timeline. Timeline entries are
        crucial for maintaining a comprehensive record of incident investigation activities.
        Each entry includes a title, optional content, event type, and timestamp.
        Entries are automatically associated with the current user and provide a chronological
        audit trail of actions taken during incident response.
      summary: Add timeline entry
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      tags:
      - Incident Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTimelineEntryRequest'
            examples:
              NoteEntry:
                value:
                  title: Initial investigation findings
                  content: Reviewed logs and found suspicious activity from IP 192.168.1.100
                  event_type: note
                summary: Standard note entry
                description: Basic timeline note with title and content
              ActionEntry:
                value:
                  title: Blocked malicious IP
                  content: Added 45.67.89.123 to firewall block list
                  event_type: action
                summary: Action taken entry
                description: Timeline entry documenting an action taken by the analyst
              EvidenceEntry:
                value:
                  title: Collected memory dump
                  content: Obtained memory dump from affected server for analysis
                  event_type: evidence
                summary: Evidence collection entry
                description: Timeline entry documenting evidence collected
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentTimelineEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentTimelineEntryRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Timeline entry added successfully
        '400':
          description: Invalid timeline entry data
        '403':
          description: Permission denied
        '500':
          description: Server error
  /api/v1/incidents/{id}/assign/:
    post:
      operationId: incidents_assign_create
      description: Assigns an incident to a user.
      summary: Assign incident
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      tags:
      - Incident Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentAssignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentAssignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentAssignRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Incident assigned successfully
        '400':
          description: Invalid assignee data
        '403':
          description: Permission denied
  /api/v1/incidents/{id}/close/:
    post:
      operationId: incidents_close_create
      description: Closes an incident and updates related alerts to 'resolved' status.
      summary: Close an incident
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      tags:
      - Incident Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Incident closed successfully
        '400':
          description: Incident already closed
        '403':
          description: Permission denied
  /api/v1/incidents/{id}/delete-task/{task_id}/:
    delete:
      operationId: incidents_delete_task_destroy
      description: Deletes a task from this incident.
      summary: Delete task
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      - in: path
        name: task_id
        schema:
          type: string
        description: UUID of the task to delete
        required: true
      tags:
      - Incident Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Task deleted successfully
        '404':
          description: Task not found
  /api/v1/incidents/{id}/generate-report/:
    post:
      operationId: incidents_generate_report_create
      description: Generates a comprehensive report for this incident in the specified
        format. Security incident reports are essential for documentation, compliance,
        and post-incident analysis. Reports include incident details, timeline, observables,
        tasks, and investigation findings. Reports can be generated in different formats
        (PDF or Markdown) and automatically record the generation in the incident
        timeline. This functionality supports regulatory compliance requirements and
        enables sharing of incident information with stakeholders.
      summary: Generate incident report
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      tags:
      - Incident Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentReportFormatRequest'
            examples:
              PdfReport:
                value:
                  format: pdf
                  include_observables: true
                  include_tasks: true
                summary: PDF report request
                description: Generate a report in PDF format
              MarkdownReport:
                value:
                  format: markdown
                  include_observables: true
                  include_tasks: true
                  include_timeline: true
                summary: Markdown report request
                description: Generate a report in Markdown format
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentReportFormatRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentReportFormatRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Report generated successfully
        '400':
          description: Invalid report options
        '403':
          description: Permission denied
        '500':
          description: Error generating report
  /api/v1/incidents/{id}/observables/:
    get:
      operationId: incidents_observables_list
      description: Lists all observables associated with this incident.
      summary: List observables
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: end_date_after
        schema:
          type: string
          format: date-time
      - in: query
        name: end_date_before
        schema:
          type: string
          format: date-time
      - in: query
        name: has_alerts
        schema:
          type: boolean
      - in: query
        name: has_tag
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: pap
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: severity
        schema:
          type: string
          enum:
          - critical
          - high
          - low
          - medium
        description: |-
          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `critical` - Critical
      - in: query
        name: start_date_after
        schema:
          type: string
          format: date-time
      - in: query
        name: start_date_before
        schema:
          type: string
          format: date-time
      - in: query
        name: status
        schema:
          type: string
          enum:
          - closed
          - in_progress
          - open
          - resolved
        description: |-
          * `open` - Open
          * `in_progress` - In Progress
          * `resolved` - Resolved
          * `closed` - Closed
      - in: query
        name: title
        schema:
          type: string
      - in: query
        name: tlp
        schema:
          type: integer
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
      tags:
      - Incident Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIncidentObservableList'
          description: ''
  /api/v1/incidents/{id}/remove-observable/{observable_id}/:
    delete:
      operationId: incidents_remove_observable_destroy
      description: Removes an observable from this incident.
      summary: Remove observable
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      - in: path
        name: observable_id
        schema:
          type: string
        description: UUID of the observable to remove
        required: true
      tags:
      - Incident Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Observable removed successfully
        '404':
          description: Observable not found in this incident
  /api/v1/incidents/{id}/run-responder/:
    post:
      operationId: incidents_run_responder_create
      description: Triggers a SentinelVision responder for this incident.
      summary: Run SentinelVision responder
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      - in: query
        name: responder_id
        schema:
          type: string
        description: ID of the responder to run (optional)
      tags:
      - Incident Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Responder triggered successfully
        '500':
          description: Error running responder
  /api/v1/incidents/{id}/tasks/:
    get:
      operationId: incidents_tasks_list
      description: Lists all tasks associated with this incident.
      summary: List tasks
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: end_date_after
        schema:
          type: string
          format: date-time
      - in: query
        name: end_date_before
        schema:
          type: string
          format: date-time
      - in: query
        name: has_alerts
        schema:
          type: boolean
      - in: query
        name: has_tag
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: pap
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: severity
        schema:
          type: string
          enum:
          - critical
          - high
          - low
          - medium
        description: |-
          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `critical` - Critical
      - in: query
        name: start_date_after
        schema:
          type: string
          format: date-time
      - in: query
        name: start_date_before
        schema:
          type: string
          format: date-time
      - in: query
        name: status
        schema:
          type: string
          enum:
          - closed
          - in_progress
          - open
          - resolved
        description: |-
          * `open` - Open
          * `in_progress` - In Progress
          * `resolved` - Resolved
          * `closed` - Closed
      - in: query
        name: title
        schema:
          type: string
      - in: query
        name: tlp
        schema:
          type: integer
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
      tags:
      - Incident Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIncidentTaskList'
          description: ''
  /api/v1/incidents/{id}/timeline/:
    get:
      operationId: incidents_timeline_list
      description: Retrieves the timeline for an incident.
      summary: Get incident timeline
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: end_date_after
        schema:
          type: string
          format: date-time
      - in: query
        name: end_date_before
        schema:
          type: string
          format: date-time
      - in: query
        name: has_alerts
        schema:
          type: boolean
      - in: query
        name: has_tag
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: pap
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: severity
        schema:
          type: string
          enum:
          - critical
          - high
          - low
          - medium
        description: |-
          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `critical` - Critical
      - in: query
        name: start_date_after
        schema:
          type: string
          format: date-time
      - in: query
        name: start_date_before
        schema:
          type: string
          format: date-time
      - in: query
        name: status
        schema:
          type: string
          enum:
          - closed
          - in_progress
          - open
          - resolved
        description: |-
          * `open` - Open
          * `in_progress` - In Progress
          * `resolved` - Resolved
          * `closed` - Closed
      - in: query
        name: title
        schema:
          type: string
      - in: query
        name: tlp
        schema:
          type: integer
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
      tags:
      - Incident Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTimelineEventList'
          description: ''
  /api/v1/incidents/{id}/update-task/{task_id}/:
    patch:
      operationId: incidents_update_task_partial_update
      description: Updates an existing task in this incident.
      summary: Update task
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident.
        required: true
      - in: path
        name: task_id
        schema:
          type: string
        description: UUID of the task to update
        required: true
      tags:
      - Incident Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIncidentTaskUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIncidentTaskUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIncidentTaskUpdateRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTask'
          description: ''
        '400':
          description: Invalid task data
        '404':
          description: Task not found
  /api/v1/mitre/alert-mappings/:
    get:
      operationId: mitre_alert_mappings_list
      description: Returns a list of mappings between alerts and MITRE ATT&CK techniques.
      summary: List Alert-MITRE Mappings
      parameters:
      - in: query
        name: alert
        schema:
          type: string
          format: uuid
      - in: query
        name: auto_detected
        schema:
          type: boolean
      - in: query
        name: confidence
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: technique
        schema:
          type: string
          format: uuid
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAlertMitreMappingList'
          description: ''
    post:
      operationId: mitre_alert_mappings_create
      description: Maps an alert to a MITRE ATT&CK technique.
      summary: Create Alert-MITRE Mapping
      tags:
      - MITRE Framework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertMitreMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertMitreMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlertMitreMappingRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertMitreMapping'
          description: ''
  /api/v1/mitre/alert-mappings/{id}/:
    get:
      operationId: mitre_alert_mappings_retrieve
      description: Returns details of a specific mapping between an alert and a MITRE
        ATT&CK technique.
      summary: Retrieve Alert-MITRE Mapping
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert MITRE Mapping.
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertMitreMapping'
          description: ''
    put:
      operationId: mitre_alert_mappings_update
      description: Updates an existing mapping between an alert and a MITRE ATT&CK
        technique.
      summary: Update Alert-MITRE Mapping
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert MITRE Mapping.
        required: true
      tags:
      - MITRE Framework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertMitreMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlertMitreMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlertMitreMappingRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertMitreMapping'
          description: ''
    patch:
      operationId: mitre_alert_mappings_partial_update
      description: Partially updates an existing mapping between an alert and a MITRE
        ATT&CK technique.
      summary: Partially Update Alert-MITRE Mapping
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert MITRE Mapping.
        required: true
      tags:
      - MITRE Framework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlertMitreMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlertMitreMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlertMitreMappingRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertMitreMapping'
          description: ''
    delete:
      operationId: mitre_alert_mappings_destroy
      description: Removes a mapping between an alert and a MITRE ATT&CK technique.
      summary: Delete Alert-MITRE Mapping
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Alert MITRE Mapping.
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/mitre/alert-mappings/bulk_delete/:
    delete:
      operationId: mitre_alert_mappings_bulk_delete_destroy
      description: Removes all mappings for a specific alert.
      summary: Bulk Delete Alert-MITRE Mappings
      parameters:
      - in: query
        name: alert_id
        schema:
          type: string
        description: UUID of the alert to delete mappings for (UUID format)
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      deleted_count:
                        type: integer
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
          description: ''
  /api/v1/mitre/incident-mappings/:
    get:
      operationId: mitre_incident_mappings_list
      description: Returns a list of mappings between incidents and MITRE ATT&CK techniques.
      summary: List Incident-MITRE Mappings
      parameters:
      - in: query
        name: confidence
        schema:
          type: integer
      - in: query
        name: incident
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: technique
        schema:
          type: string
          format: uuid
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIncidentMitreMappingList'
          description: ''
    post:
      operationId: mitre_incident_mappings_create
      description: Maps an incident to a MITRE ATT&CK technique.
      summary: Create Incident-MITRE Mapping
      tags:
      - MITRE Framework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentMitreMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentMitreMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentMitreMappingRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentMitreMapping'
          description: ''
  /api/v1/mitre/incident-mappings/{id}/:
    get:
      operationId: mitre_incident_mappings_retrieve
      description: Returns details of a specific mapping between an incident and a
        MITRE ATT&CK technique.
      summary: Retrieve Incident-MITRE Mapping
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident MITRE Mapping.
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentMitreMapping'
          description: ''
    put:
      operationId: mitre_incident_mappings_update
      description: Updates an existing mapping between an incident and a MITRE ATT&CK
        technique.
      summary: Update Incident-MITRE Mapping
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident MITRE Mapping.
        required: true
      tags:
      - MITRE Framework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentMitreMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IncidentMitreMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IncidentMitreMappingRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentMitreMapping'
          description: ''
    patch:
      operationId: mitre_incident_mappings_partial_update
      description: Partially updates an existing mapping between an incident and a
        MITRE ATT&CK technique.
      summary: Partially Update Incident-MITRE Mapping
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident MITRE Mapping.
        required: true
      tags:
      - MITRE Framework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIncidentMitreMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIncidentMitreMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIncidentMitreMappingRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentMitreMapping'
          description: ''
    delete:
      operationId: mitre_incident_mappings_destroy
      description: Removes a mapping between an incident and a MITRE ATT&CK technique.
      summary: Delete Incident-MITRE Mapping
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Incident MITRE Mapping.
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/mitre/incident-mappings/bulk_delete/:
    delete:
      operationId: mitre_incident_mappings_bulk_delete_destroy
      description: Delete all MITRE mappings for a specific incident
      summary: Bulk delete mappings
      parameters:
      - in: query
        name: incident_id
        schema:
          type: string
        description: UUID of the incident to delete mappings for (UUID format)
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      deleted_count:
                        type: integer
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
          description: ''
  /api/v1/mitre/mitigations/:
    get:
      operationId: mitre_mitigations_list
      description: Returns a list of MITRE ATT&CK Mitigations.
      summary: List MITRE ATT&CK Mitigations
      parameters:
      - in: query
        name: external_id
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMitreMitigationList'
          description: ''
  /api/v1/mitre/mitigations/{id}/:
    get:
      operationId: mitre_mitigations_retrieve
      description: Returns details of a specific MITRE ATT&CK Mitigation.
      summary: Retrieve MITRE ATT&CK Mitigation
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this MITRE Mitigation.
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MitreMitigationDetail'
          description: ''
  /api/v1/mitre/observable-mappings/:
    get:
      operationId: mitre_observable_mappings_list
      description: Returns a list of mappings between observables and MITRE ATT&CK
        techniques.
      summary: List Observable-MITRE Mappings
      parameters:
      - in: query
        name: auto_detected
        schema:
          type: boolean
      - in: query
        name: confidence
        schema:
          type: integer
      - in: query
        name: observable
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: technique
        schema:
          type: string
          format: uuid
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObservableMitreMappingList'
          description: ''
    post:
      operationId: mitre_observable_mappings_create
      description: Maps an observable to a MITRE ATT&CK technique.
      summary: Create Observable-MITRE Mapping
      tags:
      - MITRE Framework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservableMitreMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservableMitreMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservableMitreMappingRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservableMitreMapping'
          description: ''
  /api/v1/mitre/observable-mappings/{id}/:
    get:
      operationId: mitre_observable_mappings_retrieve
      description: Returns details of a specific mapping between an observable and
        a MITRE ATT&CK technique.
      summary: Retrieve Observable-MITRE Mapping
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Observable MITRE Mapping.
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservableMitreMapping'
          description: ''
    put:
      operationId: mitre_observable_mappings_update
      description: Updates an existing mapping between an observable and a MITRE ATT&CK
        technique.
      summary: Update Observable-MITRE Mapping
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Observable MITRE Mapping.
        required: true
      tags:
      - MITRE Framework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservableMitreMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservableMitreMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservableMitreMappingRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservableMitreMapping'
          description: ''
    patch:
      operationId: mitre_observable_mappings_partial_update
      description: Partially updates an existing mapping between an observable and
        a MITRE ATT&CK technique.
      summary: Partially Update Observable-MITRE Mapping
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Observable MITRE Mapping.
        required: true
      tags:
      - MITRE Framework
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObservableMitreMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObservableMitreMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObservableMitreMappingRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservableMitreMapping'
          description: ''
    delete:
      operationId: mitre_observable_mappings_destroy
      description: Removes a mapping between an observable and a MITRE ATT&CK technique.
      summary: Delete Observable-MITRE Mapping
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Observable MITRE Mapping.
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/mitre/observable-mappings/bulk_delete/:
    delete:
      operationId: mitre_observable_mappings_bulk_delete_destroy
      description: Delete all MITRE mappings for a specific observable
      summary: Bulk delete mappings
      parameters:
      - in: query
        name: observable_id
        schema:
          type: string
        description: UUID of the observable to delete mappings for (UUID format)
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      deleted_count:
                        type: integer
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
          description: ''
  /api/v1/mitre/relationships/:
    get:
      operationId: mitre_relationships_list
      description: Returns a list of relationships between MITRE ATT&CK objects.
      summary: List MITRE ATT&CK Relationships
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: relationship_type
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: source_id
        schema:
          type: string
      - in: query
        name: target_id
        schema:
          type: string
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMitreRelationshipList'
          description: ''
  /api/v1/mitre/relationships/{id}/:
    get:
      operationId: mitre_relationships_retrieve
      description: Returns details of a specific relationship between MITRE ATT&CK
        objects.
      summary: Retrieve MITRE ATT&CK Relationship
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this MITRE Relationship.
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MitreRelationship'
          description: ''
  /api/v1/mitre/tactics/:
    get:
      operationId: mitre_tactics_list
      description: Returns a list of MITRE ATT&CK Tactics.
      summary: List MITRE ATT&CK Tactics
      parameters:
      - in: query
        name: external_id
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMitreTacticList'
          description: ''
  /api/v1/mitre/tactics/{id}/:
    get:
      operationId: mitre_tactics_retrieve
      description: Returns details of a specific MITRE ATT&CK Tactic.
      summary: Retrieve MITRE ATT&CK Tactic
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this MITRE Tactic.
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MitreTacticDetail'
          description: ''
  /api/v1/mitre/techniques/:
    get:
      operationId: mitre_techniques_list
      description: Retrieves a comprehensive list of MITRE ATT&CK Techniques with
        filtering capabilities. MITRE ATT&CK is a globally-accessible knowledge base
        of adversary tactics and techniques based on real-world observations. The
        techniques represent the various methods that adversaries use to accomplish
        tactical goals during an attack. This endpoint supports security operations
        by providing standardized technique definitions that can be mapped to detection
        rules, security controls, and threat intelligence. The list can be filtered
        by various criteria including tactic, platform, and whether it's a subtechnique.
      summary: List MITRE ATT&CK Techniques
      parameters:
      - in: query
        name: external_id
        schema:
          type: string
      - in: query
        name: is_subtechnique
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: platforms
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: tactics
        schema:
          type: array
          items:
            type: string
            format: uuid
        explode: true
        style: form
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Techniques retrieved successfully
  /api/v1/mitre/techniques/{id}/:
    get:
      operationId: mitre_techniques_retrieve
      description: Retrieves detailed information about a specific MITRE ATT&CK Technique,
        including its full description, platforms it affects, associated tactics,
        mitigations, and related techniques. This endpoint provides the comprehensive
        knowledge needed for threat modeling, security control development, and detection
        strategy creation. The detailed technique information helps security teams
        understand attacker methodologies and implement appropriate countermeasures.
        For subtechniques, the parent technique is also included to show the hierarchical
        relationship.
      summary: Retrieve MITRE ATT&CK Technique
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this MITRE Technique.
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Technique retrieved successfully
  /api/v1/mitre/techniques/{id}/related_entities/:
    get:
      operationId: mitre_techniques_related_entities_retrieve
      description: Retrieves counts of security entities (alerts, incidents, and observables)
        that are linked to this MITRE ATT&CK technique. This endpoint is essential
        for threat hunting and security operations, allowing analysts to identify
        how frequently a specific attack technique appears across their security data.
        The counts help prioritize response to techniques that are more commonly seen
        in the environment and provide insights into the prevalence of specific attack
        patterns. This information supports better allocation of security resources
        and more targeted defensive measures.
      summary: Get entities related to this MITRE Technique
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this MITRE Technique.
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Related entity counts retrieved successfully
  /api/v1/mitre/techniques/{id}/subtechniques/:
    get:
      operationId: mitre_techniques_subtechniques_retrieve
      description: Retrieves all subtechniques associated with a parent MITRE ATT&CK
        technique. Subtechniques provide more granular descriptions of specific adversary
        behaviors within the context of a parent technique. This endpoint is valuable
        for security analysts who need to understand the various ways a particular
        technique can be implemented by attackers. The hierarchical relationship between
        techniques and subtechniques supports more precise threat modeling, detection
        rule development, and security control implementation. Each subtechnique includes
        its ATT&CK ID, name, description, and other metadata.
      summary: Get subtechniques of this MITRE Technique
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this MITRE Technique.
        required: true
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Subtechniques retrieved successfully
  /api/v1/mitre/techniques/stats/:
    get:
      operationId: mitre_techniques_stats_retrieve
      description: Provides comprehensive statistics about MITRE ATT&CK techniques
        categorized by tactics, technique types, and platforms. This endpoint is critical
        for threat intelligence analysis and security posture assessments. The data
        returned enables security teams to understand the distribution of techniques
        across different tactics (like Initial Access, Execution, etc.), differentiate
        between base techniques and subtechniques, and identify which platforms (Windows,
        Linux, Cloud, etc.) have more documented attack techniques. This information
        helps in prioritizing security controls and detection capabilities.
      summary: Get MITRE Technique statistics
      tags:
      - MITRE Framework
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Statistics retrieved successfully
  /api/v1/notifications/:
    get:
      operationId: notifications_list
      description: Retrieves a paginated list of notifications for the current user
        with filtering options. This endpoint powers the notification center across
        the SOAR platform, providing access to both personal notifications where the
        user is a direct recipient and company-wide notifications for the user's organization.
        The endpoint supports comprehensive filtering by category, priority, and notification
        scope, as well as text search capabilities. Results can be ordered by recency
        or priority to help users identify the most important notifications first.
        This notification feed is essential for security teams to stay informed about
        alerts, incidents, tasks, and system events.
      summary: List notifications
      parameters:
      - in: query
        name: category
        schema:
          type: string
        description: Filter by notification category (alert, incident, task, system,
          report)
      - in: query
        name: is_company_wide
        schema:
          type: boolean
        description: Filter for company-wide notifications only
      - in: query
        name: ordering
        schema:
          type: string
        description: Order by field (created_at, priority). Prefix with - for descending
          order.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: priority
        schema:
          type: string
        description: Filter by notification priority (low, medium, high, critical)
      - in: query
        name: search
        schema:
          type: string
        description: Search in notification title and message
      tags:
      - Notification System
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationLiteList'
              examples:
                NotificationList:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - status: success
                      message: Notifications retrieved successfully
                      data:
                        count: 15
                        next: http://api.example.com/api/v1/notifications/?page=2
                        previous: null
                        results:
                        - id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                          title: Critical Alert Detected
                          message: 'A critical security alert has been detected: Potential
                            data exfiltration activity'
                          category: alert
                          priority: critical
                          is_company_wide: false
                          created_at: '2023-05-15T14:30:45Z'
                          is_read: false
                          data:
                            alert_id: a1b2c3d4
                            link: /alerts/a1b2c3d4
                        - id: 3e7dea7a-b581-4d9e-82c2-b6b44476b3a7
                          title: New Incident Assigned
                          message: 'You have been assigned to incident INC-2023-05-15-001:
                            Network Intrusion'
                          category: incident
                          priority: high
                          is_company_wide: false
                          created_at: '2023-05-15T10:22:18Z'
                          is_read: true
                          data:
                            incident_id: INC-2023-05-15-001
                            link: /incidents/INC-2023-05-15-001
                        - id: d5c59a2b-8dfb-4032-9c8c-110ac4b4c4aa
                          title: System Maintenance Scheduled
                          message: The system will undergo scheduled maintenance on
                            May 20, 2023 from 02:00-04:00 UTC.
                          category: system
                          priority: medium
                          is_company_wide: true
                          created_at: '2023-05-14T08:15:30Z'
                          is_read: false
                          data:
                            maintenance_id: MAINT-2023-05-20
                            duration_hours: 2
                  summary: List of notifications
                  description: Example of a paginated list of notifications for the
                    current user
          description: Notifications retrieved successfully
        '403':
          description: Permission denied
    post:
      operationId: notifications_create
      description: Creates a new notification to be sent to users. Requires manage_notifications
        permission. The notification can be sent to specific users or company-wide.
      summary: Create a new notification
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
          description: ''
  /api/v1/notifications/{id}/:
    get:
      operationId: notifications_retrieve
      description: Retrieves detailed information about a specific notification. Users
        can only view notifications where they are recipients or company-wide notifications
        for their company.
      summary: Get notification details
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Notification.
        required: true
      tags:
      - Notification System
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
          description: ''
    put:
      operationId: notifications_update
      description: |-
        ViewSet for managing notifications including
        listing, retrieving, creating, and marking as read.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Notification.
        required: true
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationLiteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationLiteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationLiteRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationLite'
          description: ''
    patch:
      operationId: notifications_partial_update
      description: |-
        ViewSet for managing notifications including
        listing, retrieving, creating, and marking as read.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Notification.
        required: true
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationLiteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationLiteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationLiteRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationLite'
          description: ''
    delete:
      operationId: notifications_destroy
      description: |-
        ViewSet for managing notifications including
        listing, retrieving, creating, and marking as read.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Notification.
        required: true
      tags:
      - Notification System
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/notifications/{id}/mark-read/:
    post:
      operationId: notifications_mark_read_create
      description: Marks a notification as read for the current user by updating the
        delivery status. This endpoint is critical for maintaining accurate user notification
        state across the SOAR platform. When a user acknowledges a notification through
        the UI, this endpoint updates all delivery statuses associated with the notification
        for that user and records the timestamp of when the notification was read.
        This information is used for notification analytics, user engagement tracking,
        and ensuring that important security alerts are acknowledged. The system automatically
        creates appropriate delivery status records if they don't exist.
      summary: Mark notification as read
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Notification.
        required: true
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationLiteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationLiteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationLiteRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Notification marked as read successfully
        '404':
          description: Notification not found
        '403':
          description: Permission denied
  /api/v1/notifications/channels/:
    get:
      operationId: notifications_channels_list
      description: Returns a list of notification channels for the current company.
        Requires manage_notifications permission.
      summary: List notification channels
      parameters:
      - in: query
        name: channel_type
        schema:
          type: string
        description: Filter by channel type (email, slack, webhook, in_app, sms)
      - in: query
        name: is_enabled
        schema:
          type: boolean
        description: Filter by enabled status
      - in: query
        name: ordering
        schema:
          type: string
        description: Order by field (name, created_at). Prefix with - for descending
          order.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
        description: Search in channel name
      tags:
      - Notification System
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationChannelLiteList'
          description: ''
    post:
      operationId: notifications_channels_create
      description: Custom create to handle tenant assignment.
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationChannelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationChannelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationChannelRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
          description: ''
  /api/v1/notifications/channels/{id}/:
    get:
      operationId: notifications_channels_retrieve
      description: Custom retrieve to use standard response format.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Notification Channel.
        required: true
      tags:
      - Notification System
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
          description: ''
    put:
      operationId: notifications_channels_update
      description: Custom update to use standard response format.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Notification Channel.
        required: true
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationChannelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationChannelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationChannelRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
          description: ''
    patch:
      operationId: notifications_channels_partial_update
      description: |-
        ViewSet for managing notification channels including
        listing, retrieving, and creating channels.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Notification Channel.
        required: true
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationChannelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationChannelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationChannelRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
          description: ''
    delete:
      operationId: notifications_channels_destroy
      description: Custom destroy to use standard response format.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Notification Channel.
        required: true
      tags:
      - Notification System
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/notifications/channels/email/:
    post:
      operationId: notifications_channels_email_create
      description: "\n        Create a new email notification channel with SMTP configuration.\n\
        \        \n        Required configuration fields:\n        - smtp_host: SMTP\
        \ server hostname\n        - smtp_port: SMTP server port\n        - smtp_username:\
        \ SMTP server username\n        - smtp_password: SMTP server password\n  \
        \      - from_email: Email address to send from\n        \n        Optional\
        \ configuration fields:\n        - use_tls: Whether to use TLS (default: true)\n\
        \        - use_ssl: Whether to use SSL (default: false)\n        "
      summary: Create email channel
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailChannelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailChannelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailChannelRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailChannel'
          description: ''
  /api/v1/notifications/channels/mattermost/:
    post:
      operationId: notifications_channels_mattermost_create
      description: "\n        Create a new Mattermost notification channel with webhook\
        \ configuration.\n        \n        Required configuration fields:\n     \
        \   - webhook_url: Mattermost incoming webhook URL\n        \n        Optional\
        \ configuration fields:\n        - username: Bot username in Mattermost\n\
        \        - channel: Mattermost channel to post to\n        - icon_url: URL\
        \ to an image to use as the bot icon\n        - include_actions: Whether to\
        \ include action buttons in notifications (default: true)\n        - app_base_url:\
        \ Base URL of the app for action links\n        "
      summary: Create Mattermost channel
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MattermostChannelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MattermostChannelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MattermostChannelRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MattermostChannel'
          description: ''
  /api/v1/notifications/channels/slack/:
    post:
      operationId: notifications_channels_slack_create
      description: "\n        Create a new Slack notification channel with webhook\
        \ configuration.\n        \n        Required configuration fields:\n     \
        \   - webhook_url: Slack incoming webhook URL\n        \n        Optional\
        \ configuration fields:\n        - username: Bot username in Slack\n     \
        \   - icon_emoji: Emoji to use as the bot icon (e.g., \":robot_face:\")\n\
        \        - default_channel: Default Slack channel to post to\n        "
      summary: Create Slack channel
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlackChannelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SlackChannelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SlackChannelRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackChannel'
          description: ''
  /api/v1/notifications/channels/sms/:
    post:
      operationId: notifications_channels_sms_create
      description: "\n        Create a new SMS notification channel.\n        \n \
        \       Required configuration fields:\n        - provider: SMS provider (twilio,\
        \ nexmo, or aws_sns)\n        - api_key: API key for the SMS provider\n  \
        \      \n        For Twilio:\n        - account_sid: Twilio account SID\n\
        \        - from_number: Phone number to send from\n        \n        For Nexmo:\n\
        \        - api_secret: API secret\n        - from_number: Phone number to\
        \ send from\n        \n        For AWS SNS:\n        - aws_region: AWS region\n\
        \        - aws_access_key: AWS access key\n        - aws_secret_key: AWS secret\
        \ key\n        "
      summary: Create SMS channel
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMSChannelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SMSChannelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SMSChannelRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSChannel'
          description: ''
  /api/v1/notifications/channels/webhook/:
    post:
      operationId: notifications_channels_webhook_create
      description: "\n        Create a new webhook notification channel.\n       \
        \ \n        Required configuration fields:\n        - url: Webhook URL to\
        \ send notifications to\n        \n        Optional configuration fields:\n\
        \        - headers: Dictionary of HTTP headers to include in requests\n  \
        \      - include_company: Whether to include company information in the payload\
        \ (default: false)\n        - method: HTTP method to use (default: \"POST\"\
        )\n        "
      summary: Create webhook channel
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookChannelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebhookChannelRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebhookChannelRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookChannel'
          description: ''
  /api/v1/notifications/preferences/{user_id}/:
    get:
      operationId: notifications_preferences_retrieve
      description: Retrieves notification preferences for a specific user. Users can
        view their own preferences, and administrators with manage_notifications permission
        can view any user's preferences within their company.
      summary: Get user notification preferences
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Notification System
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationPreference'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
          description: ''
    patch:
      operationId: notifications_preferences_partial_update
      description: Updates notification preferences for a specific user. Users can
        update their own preferences, and administrators with manage_notifications
        permission can update any user's preferences within their company.
      summary: Update user notification preferences
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationPreferenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationPreferenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserNotificationPreferenceRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotificationPreference'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
          description: ''
  /api/v1/notifications/rules/:
    get:
      operationId: notifications_rules_list
      description: Returns a paginated list of notification rules for the current
        tenant, with optional filtering.
      summary: List notification rules
      parameters:
      - in: query
        name: event_type
        schema:
          type: string
        description: Filter by event type
      - in: query
        name: is_active
        schema:
          type: string
        description: Filter by active status
      - in: query
        name: ordering
        schema:
          type: string
        description: Order by field (prefix with - for descending)
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
        description: Search by name or description
      tags:
      - Notification System
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationRuleList'
          description: ''
    post:
      operationId: notifications_rules_create
      description: Custom create to handle tenant and creator assignment.
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationRuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationRuleRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
          description: ''
  /api/v1/notifications/rules/{id}/:
    get:
      operationId: notifications_rules_retrieve
      description: Custom retrieve to use standard response format.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Notification Rule.
        required: true
      tags:
      - Notification System
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
          description: ''
    put:
      operationId: notifications_rules_update
      description: Custom update to use standard response format.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Notification Rule.
        required: true
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationRuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationRuleRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
          description: ''
    patch:
      operationId: notifications_rules_partial_update
      description: |-
        ViewSet for managing notification rules including
        listing, retrieving, creating, updating, and deleting rules.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Notification Rule.
        required: true
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationRuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationRuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationRuleRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
          description: ''
    delete:
      operationId: notifications_rules_destroy
      description: Custom destroy to use standard response format.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Notification Rule.
        required: true
      tags:
      - Notification System
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/notifications/test/:
    post:
      operationId: notifications_test_create
      description: Sends a test message through the specified notification channel
        to verify its configuration.
      summary: Test a notification channel
      tags:
      - Notification System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationTestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationTestRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
          description: ''
  /api/v1/observables/:
    get:
      operationId: observables_list
      description: Get a paginated list of all observables for the current user's
        company.
      summary: List all observables
      parameters:
      - in: query
        name: category
        schema:
          type: string
          enum:
          - antivirus
          - artifacts
          - attribution
          - external_analysis
          - financial_fraud
          - internal_reference
          - network_activity
          - other
          - payload_delivery
          - payload_installation
          - payload_type
          - persistence
          - person
          - social_network
          - support_tool
          - targeting
        description: |-
          * `antivirus` - Antivirus
          * `artifacts` - Artifacts
          * `attribution` - Attribution
          * `external_analysis` - External Analysis
          * `financial_fraud` - Financial Fraud
          * `internal_reference` - Internal Reference
          * `network_activity` - Network Activity
          * `other` - Other
          * `payload_delivery` - Payload Delivery
          * `payload_installation` - Payload Installation
          * `payload_type` - Payload Type
          * `persistence` - Persistence
          * `person` - Person
          * `social_network` - Social Network
          * `support_tool` - Support Tool
          * `targeting` - Targeting
      - in: query
        name: confidence_max
        schema:
          type: integer
      - in: query
        name: confidence_min
        schema:
          type: integer
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: has_alert
        schema:
          type: boolean
      - in: query
        name: has_incident
        schema:
          type: boolean
      - in: query
        name: has_tag
        schema:
          type: string
      - in: query
        name: is_false_positive
        schema:
          type: boolean
      - in: query
        name: is_ioc
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: source
        schema:
          type: string
      - in: query
        name: tlp
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
          enum:
          - as
          - authentihash
          - bank-account-nr
          - bic
          - btc
          - campaign-name
          - cc-number
          - comment
          - domain
          - email
          - email-attachment
          - email-body
          - email-header
          - email-subject
          - filename
          - filepath
          - first-name
          - full-name
          - hash-md5
          - hash-sha1
          - hash-sha256
          - hash-sha512
          - hostname
          - iban
          - imphash
          - ip
          - ip-port
          - ja3-fingerprint-md5
          - last-name
          - mac-address
          - malware-sample
          - mime-type
          - mutex
          - named-pipe
          - other
          - passport-number
          - pehash
          - phone-number
          - process
          - process-state
          - regkey
          - regkey|value
          - sigma
          - snort
          - ssdeep
          - stix2-pattern
          - threat-actor
          - uri
          - url
          - user-agent
          - vulnerability
          - weakness
          - windows-scheduled-task
          - windows-service-name
          - yara
        description: |-
          * `as` - As
          * `domain` - Domain
          * `email` - Email
          * `email-attachment` - Email Attachment
          * `email-body` - Email Body
          * `email-header` - Email Header
          * `email-subject` - Email Subject
          * `hostname` - Hostname
          * `ip` - Ip
          * `ip-port` - Ip Port
          * `mac-address` - Mac Address
          * `uri` - Uri
          * `url` - Url
          * `user-agent` - User Agent
          * `authentihash` - Authentihash
          * `filename` - Filename
          * `filepath` - Filepath
          * `hash-md5` - Hash Md5
          * `hash-sha1` - Hash Sha1
          * `hash-sha256` - Hash Sha256
          * `hash-sha512` - Hash Sha512
          * `imphash` - Imphash
          * `malware-sample` - Malware Sample
          * `mime-type` - Mime Type
          * `pehash` - Pehash
          * `ssdeep` - Ssdeep
          * `mutex` - Mutex
          * `named-pipe` - Named Pipe
          * `process` - Process
          * `process-state` - Process State
          * `regkey` - Registry
          * `regkey|value` - Registry Value
          * `windows-service-name` - Windows Service
          * `windows-scheduled-task` - Windows Scheduled Task
          * `bank-account-nr` - Bank Account
          * `bic` - Bic
          * `btc` - Bitcoin
          * `cc-number` - Cc Number
          * `iban` - Iban
          * `first-name` - First Name
          * `last-name` - Last Name
          * `full-name` - Full Name
          * `passport-number` - Passport Number
          * `phone-number` - Phone Number
          * `sigma` - Sigma
          * `snort` - Snort
          * `stix2-pattern` - Stix2
          * `yara` - Yara
          * `campaign-name` - Campaign Name
          * `ja3-fingerprint-md5` - Ja3 Fingerprint
          * `threat-actor` - Threat Actor
          * `vulnerability` - Vulnerability
          * `weakness` - Weakness
          * `comment` - Comment
          * `other` - Other
      - in: query
        name: updated_after
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_before
        schema:
          type: string
          format: date-time
      - in: query
        name: value
        schema:
          type: string
      tags:
      - Observables & IOCs
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Success
    post:
      operationId: observables_create
      description: Create a new observable with the provided data. Automatically handles
        duplicates.
      summary: Create a new observable
      tags:
      - Observables & IOCs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservableCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservableCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservableCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          description: Observable created successfully
        '400':
          description: Invalid request data
  /api/v1/observables/{id}/:
    get:
      operationId: observables_retrieve
      description: Retrieve detailed information about a specific observable.
      summary: Get observable detail
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Observable.
        required: true
      tags:
      - Observables & IOCs
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Success
        '404':
          description: Observable not found
    put:
      operationId: observables_update
      description: Update all fields of an existing observable.
      summary: Update an observable
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Observable.
        required: true
      tags:
      - Observables & IOCs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservableRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observable'
          description: ''
    patch:
      operationId: observables_partial_update
      description: Update specific fields of an existing observable.
      summary: Partially update an observable
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Observable.
        required: true
      tags:
      - Observables & IOCs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObservableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedObservableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedObservableRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observable'
          description: ''
    delete:
      operationId: observables_destroy
      description: Permanently delete an observable.
      summary: Delete an observable
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Observable.
        required: true
      tags:
      - Observables & IOCs
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/observables/{id}/history/:
    get:
      operationId: observables_history_retrieve
      description: Retrieves the complete history of an observable, including enrichment
        executions and audit logs. This endpoint provides a comprehensive audit trail
        for security investigations, showing all actions, enrichments, and modifications
        performed on the observable over time. The history is sorted chronologically
        with the most recent events first, providing visibility into the observable's
        lifecycle and intelligence gathering process.
      summary: Get observable history
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Observable.
        required: true
      tags:
      - Observables & IOCs
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Observable history retrieved successfully
        '403':
          description: Permission denied
        '500':
          description: Server error
  /api/v1/observables/{id}/mark-as-ioc/:
    post:
      operationId: observables_mark_as_ioc_create
      description: Mark an observable as an Indicator of Compromise (IOC).
      summary: Mark observable as IOC
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Observable.
        required: true
      tags:
      - Observables & IOCs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservableRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observable'
          description: ''
  /api/v1/observables/{id}/reprocess/:
    post:
      operationId: observables_reprocess_create
      description: Reprocess an observable through all compatible analyzer modules
        in SentinelVision. This endpoint triggers threat intelligence enrichment for
        the observable, checking various threat feeds, reputation services, and analysis
        engines. The processing occurs asynchronously via Celery tasks, and results
        will be stored in the observable's enrichment_data. This is useful when new
        analyzers are added or when you need fresh intelligence on an indicator.
      summary: Reprocess observable through enrichment
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Observable.
        required: true
      tags:
      - Observables & IOCs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservableRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Enrichment queued successfully
        '403':
          description: Permission denied
        '500':
          description: Server error
  /api/v1/observables/search_elasticsearch/:
    get:
      operationId: observables_search_elasticsearch_retrieve
      description: Provides powerful multi-criteria search capabilities for security
        observables using Elasticsearch. This endpoint enables security analysts to
        quickly search for indicators across the entire platform with tenant isolation
        ensuring data segregation. Results include observables with their metadata,
        tags, and enrichment information. This is particularly useful for threat hunting,
        incident correlation, and discovering related observables during an investigation.
      summary: Search Elasticsearch for observables
      parameters:
      - in: query
        name: days
        schema:
          type: integer
        description: 'How many days back to search (default: 90)'
        examples:
          Days30:
            value: '30'
            summary: Last month
          Days90:
            value: '90'
            summary: Last quarter
          Days365:
            value: '365'
            summary: Last year
      - in: query
        name: is_ioc
        schema:
          type: boolean
        description: Filter by IOC status
        examples:
          IocTrue:
            value: 'true'
            summary: Only IOCs
          IocFalse:
            value: 'false'
            summary: Non-IOCs
      - in: query
        name: limit
        schema:
          type: integer
        description: 'Maximum number of results (default: 50)'
        examples:
          Limit10:
            value: '10'
            summary: Small result set
          Limit50:
            value: '50'
            summary: Default result set
          Limit100:
            value: '100'
            summary: Large result set
      - in: query
        name: q
        schema:
          type: string
        description: Search query string (required) - supports Elasticsearch query
          syntax
        required: true
        examples:
          IpSearch:
            value: 192.168.1.100
            summary: Search for IP
          DomainSearch:
            value: malicious-domain.com
            summary: Search for domain
          HashSearch:
            value: 44d88612fea8a8f36de82e1278abb02f
            summary: Search for file hash
      - in: query
        name: type
        schema:
          type: string
        description: Observable type filter
        examples:
          IpType:
            value: ip
            summary: IP type filter
          DomainType:
            value: domain
            summary: Domain type filter
          FileHashType:
            value: file_hash
            summary: File hash type filter
          EmailType:
            value: email
            summary: Email type filter
      tags:
      - Observables & IOCs
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Search results returned successfully
        '400':
          description: Invalid search parameters
        '403':
          description: Permission denied
        '500':
          description: Search error
  /api/v1/reporting/incidents/{incident_id}/report/markdown/:
    get:
      operationId: reporting_incidents_report_markdown_retrieve
      description: Generates a comprehensive Markdown report for a security incident.
        This endpoint is essential for security teams that need to document and share
        incident details for post-incident analysis, compliance, or knowledge sharing.
        The Markdown format allows for easy editing, conversion to other formats,
        and inclusion in documentation systems. The report includes all incident details,
        timeline events, related alerts, observables (IOCs), tasks, and analyst notes.
        This report can be used for incident documentation, team handovers, management
        updates, and regulatory reporting.
      summary: Generate incident report in Markdown format
      parameters:
      - in: path
        name: incident_id
        schema:
          type: string
        description: UUID of the incident to generate a report for
        required: true
      tags:
      - Reporting
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Markdown report generated successfully
        '404':
          description: Incident not found
        '403':
          description: Permission denied
        '500':
          description: Report generation error
  /api/v1/reporting/incidents/{incident_id}/report/pdf/:
    get:
      operationId: reporting_incidents_report_pdf_retrieve
      description: Generates a professionally formatted PDF report for a security
        incident. PDF reports are essential for formal documentation, management presentations,
        and regulatory compliance. This endpoint creates a comprehensive document
        with the incident details, timeline, related observables (IOCs), affected
        systems, and remediation actions. PDF reports include proper formatting, company
        branding, tables, charts, and data visualizations where appropriate. These
        reports are commonly used for executive briefings, customer communications,
        legal documentation, and regulatory submissions following a security incident.
      summary: Generate incident report in PDF format
      parameters:
      - in: path
        name: incident_id
        schema:
          type: string
        description: UUID of the incident to generate a report for
        required: true
      - in: query
        name: include_iocs
        schema:
          type: boolean
        description: Whether to include observables/IOCs in the report
      - in: query
        name: template
        schema:
          type: string
        description: Report template to use (default, executive, detailed, technical,
          compliance)
      tags:
      - Reporting
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: PDF report generated successfully
        '404':
          description: Incident not found
        '403':
          description: Permission denied
        '500':
          description: Report generation error
  /api/v1/sentinel-vision/enrichment/{id}/observable-details/:
    get:
      operationId: sentinel_vision_enrichment_observable_details_retrieve
      description: Get details of a specific enriched observable (IOC).
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: The ID of the enriched observable
        required: true
      tags:
      - Threat Intelligence (SentinelVision)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrichedIOC'
          description: Observable details retrieved successfully
        '404':
          description: Observable not found
        '403':
          description: Permission denied
  /api/v1/sentinel-vision/enrichment/{id}/reenrich-observable/:
    post:
      operationId: sentinel_vision_enrichment_reenrich_observable_create
      description: Forces a fresh enrichment of an existing observable that has already
        been processed. This endpoint is critical for security operations that need
        to refresh threat intelligence on indicators that may have new information
        available from intelligence sources. As threat landscapes evolve, intelligence
        about observables can change over time - for example, an IP previously marked
        as benign might later be associated with malicious activity. This endpoint
        enables security analysts to get the most current intelligence on observables
        of interest. The process runs asynchronously and updates all metadata, reputation
        scores, and relationships for the observable based on the latest available
        threat intelligence.
      summary: Re-enrich existing observable
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Enriched IOC.
        required: true
      tags:
      - Threat Intelligence (SentinelVision)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Re-enrichment process started successfully
        '404':
          description: Observable not found
        '403':
          description: Permission denied
  /api/v1/sentinel-vision/enrichment/enrich-observable/:
    post:
      operationId: sentinel_vision_enrichment_enrich_observable_create
      description: Initiates the enrichment process for a security observable (Indicator
        of Compromise) by checking it against all configured threat intelligence sources.
        This endpoint is a cornerstone of the SOAR platform's automated intelligence
        gathering capabilities, allowing analysts to quickly determine if an observable
        has been reported in threat intelligence feeds. The process runs asynchronously
        and checks the observable against various intelligence sources including MISP
        instances, TAXII feeds, commercial threat intelligence platforms, and open-source
        intelligence. Results include reputation scores, first/last seen dates, related
        malware families, and associated threat actors. This capability is essential
        for rapid triage and threat assessment during security incident response.
      summary: Enrich observable with threat intelligence
      tags:
      - Threat Intelligence (SentinelVision)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnrichObservableRequestRequest'
            examples:
              IPEnrichment:
                value:
                  ioc_type: ip
                  ioc_value: 1.2.3.4
                  description: Suspicious IP from alert
                  source: manual_submission
                summary: Enrich an IP address
              DomainEnrichment:
                value:
                  ioc_type: domain
                  ioc_value: malicious.example.com
                  description: Suspicious domain from email
                  source: phishing_alert
                summary: Enrich a domain
              HashEnrichment:
                value:
                  ioc_type: hash
                  ioc_value: 44d88612fea8a8f36de82e1278abb02f
                  description: Malware sample from sandbox
                  source: sandbox_analysis
                summary: Enrich a file hash
              URLEnrichment:
                value:
                  ioc_type: url
                  ioc_value: https://malicious.example.com/payload.php
                  description: Malicious URL from web proxy logs
                  source: proxy_alert
                summary: Enrich a URL
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnrichObservableRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnrichObservableRequestRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Enrichment process started successfully
        '400':
          description: Invalid request parameters
        '403':
          description: Permission denied
  /api/v1/sentinel-vision/enrichment/list-observables/:
    get:
      operationId: sentinel_vision_enrichment_list_observables_retrieve
      description: List enriched observables (IOCs) for the current company.
      parameters:
      - in: query
        name: ioc_type
        schema:
          type: string
          enum:
          - cve
          - domain
          - email
          - filename
          - filepath
          - ip
          - md5
          - other
          - registry
          - sha1
          - sha256
          - url
        description: Filter by IOC type
      - in: query
        name: status
        schema:
          type: string
          enum:
          - enriched
          - not_found
          - pending
        description: Filter by enrichment status
      - in: query
        name: value
        schema:
          type: string
        description: Search by IOC value
      tags:
      - Threat Intelligence (SentinelVision)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEnrichedIOCList'
          description: Observable list retrieved successfully
        '403':
          description: Permission denied
  /api/v1/sentinel-vision/feeds/:
    get:
      operationId: sentinel_vision_feeds_list
      description: API endpoints for managing and executing feed modules.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Threat Intelligence (SentinelVision)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedModuleListList'
          description: ''
    post:
      operationId: sentinel_vision_feeds_create
      description: API endpoints for managing and executing feed modules.
      tags:
      - Threat Intelligence (SentinelVision)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedModuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedModuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedModuleRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedModule'
          description: ''
  /api/v1/sentinel-vision/feeds/{id}/:
    get:
      operationId: sentinel_vision_feeds_retrieve
      description: API endpoints for managing and executing feed modules.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Feed Module.
        required: true
      tags:
      - Threat Intelligence (SentinelVision)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedModule'
          description: ''
    put:
      operationId: sentinel_vision_feeds_update
      description: API endpoints for managing and executing feed modules.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Feed Module.
        required: true
      tags:
      - Threat Intelligence (SentinelVision)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedModuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedModuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedModuleRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedModule'
          description: ''
    patch:
      operationId: sentinel_vision_feeds_partial_update
      description: API endpoints for managing and executing feed modules.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Feed Module.
        required: true
      tags:
      - Threat Intelligence (SentinelVision)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFeedModuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFeedModuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFeedModuleRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedModule'
          description: ''
    delete:
      operationId: sentinel_vision_feeds_destroy
      description: API endpoints for managing and executing feed modules.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Feed Module.
        required: true
      tags:
      - Threat Intelligence (SentinelVision)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/sentinel-vision/feeds/{id}/history/:
    get:
      operationId: sentinel_vision_feeds_history_retrieve
      description: List execution history for a feed module.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: The ID of the feed module
        required: true
      tags:
      - Threat Intelligence (SentinelVision)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedExecutionRecordList'
          description: Feed execution history retrieved successfully
        '404':
          description: Feed not found
        '403':
          description: Permission denied
  /api/v1/sentinel-vision/feeds/{id}/run/:
    post:
      operationId: sentinel_vision_feeds_run_create
      description: Manually triggers the execution of a threat intelligence feed module.
        This endpoint initiates the asynchronous collection and processing of security
        data from external sources through the SentinelVision automation engine. Feed
        modules are responsible for ingesting threat intelligence data such as malicious
        indicators, threat actor details, and vulnerability information. The execution
        creates a record in the system and tracks the processing status. This capability
        is essential for security operations to update intelligence data on-demand
        rather than waiting for scheduled runs, particularly when responding to emerging
        threats that require immediate intelligence updates.
      summary: Execute threat intelligence feed processing
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Feed Module.
        required: true
      tags:
      - Threat Intelligence (SentinelVision)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedModuleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FeedModuleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FeedModuleRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Feed execution started successfully
        '404':
          description: Feed not found
        '403':
          description: Permission denied
  /api/v1/tasks/:
    get:
      operationId: tasks_list
      description: Get a paginated list of all tasks for the current user's company.
      summary: List all tasks
      parameters:
      - in: query
        name: assigned_to
        schema:
          type: integer
          nullable: true
      - in: query
        name: incident
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: priority
        schema:
          type: string
          enum:
          - critical
          - high
          - low
          - medium
        description: |-
          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `critical` - Critical
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - canceled
          - completed
          - in_progress
          - open
        description: |-
          * `open` - Open
          * `in_progress` - In Progress
          * `completed` - Completed
          * `canceled` - Canceled
      tags:
      - Task Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskList'
          description: ''
    post:
      operationId: tasks_create
      description: Create a new task with the provided data.
      summary: Create a new task
      tags:
      - Task Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/v1/tasks/{id}/:
    get:
      operationId: tasks_retrieve
      description: Retrieve detailed information about a specific task.
      summary: Get task detail
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Task.
        required: true
      tags:
      - Task Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: tasks_update
      description: Update all fields of an existing task.
      summary: Update a task
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Task.
        required: true
      tags:
      - Task Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: tasks_partial_update
      description: Update specific fields of an existing task.
      summary: Partially update a task
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Task.
        required: true
      tags:
      - Task Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: tasks_destroy
      description: Permanently delete a task.
      summary: Delete a task
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Task.
        required: true
      tags:
      - Task Management
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/tasks/{id}/complete/:
    post:
      operationId: tasks_complete_create
      description: Mark a task as completed and update the incident timeline
      summary: Mark task as completed
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Task.
        required: true
      tags:
      - Task Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/v1/wiki/articles/:
    get:
      operationId: wiki_articles_list
      description: Retrieves a list of knowledge articles (wiki pages) with filtering
        capabilities. The knowledge base is a critical component of the SOAR platform
        that stores security playbooks, standard operating procedures, and technical
        documentation. This endpoint supports multi-tenant isolation and visibility
        control, ensuring users only see appropriate content for their organization.
        Articles can be filtered by category, tags, and visibility settings. The content
        supports Markdown formatting for rich documentation including code snippets,
        tables, and procedures.
      summary: List knowledge articles
      parameters:
      - in: query
        name: author
        schema:
          type: integer
      - in: query
        name: category
        schema:
          type: string
          format: uuid
      - in: query
        name: company
        schema:
          type: string
          format: uuid
      - in: query
        name: is_reviewed
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: array
          items:
            type: string
            maxLength: 50
      - in: query
        name: visibility
        schema:
          type: string
          enum:
          - private
          - public
        description: |-
          * `public` - Public
          * `private` - Private
      tags:
      - Knowledge Base (Wiki)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Articles retrieved successfully
    post:
      operationId: wiki_articles_create
      description: Creates a new knowledge article in the security wiki. Knowledge
        articles store important security documentation such as incident response
        playbooks, standard operating procedures, and technical reference materials.
        This endpoint supports Markdown formatting for rich content including code
        snippets, tables, and checklists. The article's visibility can be set to control
        access across the organization. Tags and categories help with organization
        and searchability of the knowledge base.
      summary: Create knowledge article
      tags:
      - Knowledge Base (Wiki)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeArticleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KnowledgeArticleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KnowledgeArticleRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          description: Article created successfully
        '400':
          description: Invalid article data
  /api/v1/wiki/articles/{slug}/:
    get:
      operationId: wiki_articles_retrieve
      description: Retrieves a detailed knowledge article by its slug identifier.
        Knowledge articles contain essential security documentation such as playbooks,
        procedures, and technical references. The content is returned in both Markdown
        format and as rendered HTML. This endpoint is essential for security analysts
        who need to follow documented procedures during incident response. Articles
        can include formatted content with checklists, code blocks, diagrams, and
        procedural steps.
      summary: Retrieve knowledge article
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - Knowledge Base (Wiki)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Article retrieved successfully
        '404':
          description: Article not found error
    put:
      operationId: wiki_articles_update
      description: Updates an existing knowledge article in the security wiki. This
        endpoint allows security teams to maintain up-to-date documentation as procedures
        and playbooks evolve. When articles are updated, the version number is automatically
        incremented to track changes over time. Updated articles can be marked for
        review to ensure quality control in the knowledge base.
      summary: Update knowledge article
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - Knowledge Base (Wiki)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeArticleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KnowledgeArticleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KnowledgeArticleRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeArticle'
          description: ''
    patch:
      operationId: wiki_articles_partial_update
      description: Partially updates an existing knowledge article, modifying only
        the specified fields. This is useful for making small changes to content,
        updating tags, or changing the article's category without resubmitting the
        entire article content.
      summary: Partially update knowledge article
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - Knowledge Base (Wiki)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgeArticleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgeArticleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgeArticleRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeArticle'
          description: ''
    delete:
      operationId: wiki_articles_destroy
      description: Deletes a knowledge article from the security wiki. This operation
        permanently removes the article and cannot be undone. Typically, articles
        should be archived rather than deleted to maintain the knowledge history of
        the security organization.
      summary: Delete knowledge article
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - Knowledge Base (Wiki)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/wiki/articles/{slug}/render/:
    get:
      operationId: wiki_articles_render_retrieve
      description: Converts the article's markdown content to HTML for rendering in
        web interfaces. This endpoint is useful for client applications that need
        to display formatted content but don't have their own markdown rendering capabilities.
        The HTML output includes proper formatting for code blocks, tables, headers,
        and other markdown elements essential for security documentation.
      summary: Render markdown content as HTML
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - Knowledge Base (Wiki)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Markdown rendered successfully
        '500':
          description: Rendering error
  /api/v1/wiki/categories/:
    get:
      operationId: wiki_categories_list
      description: Retrieves a list of knowledge base categories used for organizing
        security documentation. Categories provide a hierarchical structure for organizing
        playbooks, procedures, and technical documentation in the security knowledge
        base. This endpoint supports multi-tenant isolation, ensuring users only see
        appropriate categories for their organization. Global categories are visible
        to all companies, while company-specific categories are only visible to users
        of that company. Categories can be nested to create a hierarchical structure.
      summary: List knowledge categories
      parameters:
      - in: query
        name: company
        schema:
          type: string
          format: uuid
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Knowledge Base (Wiki)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Categories retrieved successfully
    post:
      operationId: wiki_categories_create
      description: Creates a new knowledge category for organizing security documentation.
        Categories provide a hierarchical structure for the knowledge base, helping
        security teams organize their playbooks, procedures, and technical documentation.
        Categories can be company-specific or global (visible to all companies). They
        can also be nested by specifying a parent category, allowing for a tree-like
        organization of content.
      summary: Create knowledge category
      tags:
      - Knowledge Base (Wiki)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KnowledgeCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KnowledgeCategoryRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '201':
          description: Category created successfully
        '400':
          description: Invalid category data
  /api/v1/wiki/categories/{id}/:
    get:
      operationId: wiki_categories_retrieve
      description: Retrieves detailed information about a specific knowledge category
        by its ID. Categories are used to organize security documentation in a hierarchical
        structure. This endpoint returns the category's details including name, description,
        and parent category if it exists. This information is used to build navigation
        structures for knowledge base interfaces and to organize related security
        documentation.
      summary: Retrieve knowledge category
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Knowledge Category.
        required: true
      tags:
      - Knowledge Base (Wiki)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          description: Category retrieved successfully
        '404':
          description: Category not found
    put:
      operationId: wiki_categories_update
      description: Updates an existing knowledge category with new values. This endpoint
        is used to modify category details such as name, description, or parent category.
        Updating a category affects the organization of all articles within that category.
      summary: Update knowledge category
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Knowledge Category.
        required: true
      tags:
      - Knowledge Base (Wiki)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KnowledgeCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KnowledgeCategoryRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeCategory'
          description: ''
    patch:
      operationId: wiki_categories_partial_update
      description: Partially updates an existing knowledge category, modifying only
        the specified fields. This is useful for making small changes to category
        details without resubmitting all the category information.
      summary: Partially update knowledge category
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Knowledge Category.
        required: true
      tags:
      - Knowledge Base (Wiki)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgeCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgeCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedKnowledgeCategoryRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeCategory'
          description: ''
    delete:
      operationId: wiki_categories_destroy
      description: Deletes a knowledge category from the system. This operation should
        be used with caution as it may affect articles assigned to this category.
        If articles are assigned to the category being deleted, consider reassigning
        them first or updating the API to handle orphaned articles.
      summary: Delete knowledge category
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Knowledge Category.
        required: true
      tags:
      - Knowledge Base (Wiki)
      security:
      - jwtAuth: []
      - basicAuth: []
      - Bearer: []
      - BasicAuth: []
      responses:
        '204':
          description: Category deleted successfully
        '400':
          description: Cannot delete category with articles
components:
  schemas:
    APIUser:
      type: object
      description: Complete serializer for the User model.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          default: analyst_company
        company:
          allOf:
          - $ref: '#/components/schemas/CompanyNested'
          readOnly: true
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - email
      - username
    APIUserRequest:
      type: object
      description: Complete serializer for the User model.
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
          minLength: 1
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          default: analyst_company
        company_id:
          type: string
          format: uuid
          writeOnly: true
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
      required:
      - email
      - username
    Alert:
      type: object
      description: Primary serializer for the Alert model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        severity_display:
          type: string
          readOnly: true
        source:
          type: string
          maxLength: 100
        source_ref:
          type: string
          title: Source Reference
          maxLength: 100
        status:
          $ref: '#/components/schemas/Status42eEnum'
        status_display:
          type: string
          readOnly: true
        company:
          type: string
          format: uuid
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserLight'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        tags:
          type: array
          items:
            type: string
            maxLength: 50
        tlp:
          allOf:
          - $ref: '#/components/schemas/Tlp563Enum'
          title: TLP (Traffic Light Protocol)
          minimum: -2147483648
          maximum: 2147483647
        tlp_display:
          type: string
          readOnly: true
        pap:
          allOf:
          - $ref: '#/components/schemas/PapEnum'
          title: PAP (Permissible Actions Protocol)
          minimum: -2147483648
          maximum: 2147483647
        pap_display:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
          title: Alert Date
        artifact_count:
          type: integer
          readOnly: true
          description: Number of attached observables/artifacts
      required:
      - description
      - source
      - title
    AlertCreateRequest:
      type: object
      description: Serializer for alert creation with custom validation.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          minLength: 1
        severity:
          allOf:
          - $ref: '#/components/schemas/SeverityEnum'
          default: medium
        source:
          type: string
          minLength: 1
          maxLength: 100
        source_ref:
          type: string
          title: Source Reference
          maxLength: 100
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        tlp:
          allOf:
          - $ref: '#/components/schemas/Tlp563Enum'
          default: 2
        pap:
          allOf:
          - $ref: '#/components/schemas/PapEnum'
          default: 2
        date:
          type: string
          format: date-time
          title: Alert Date
        company:
          type: string
          format: uuid
        observable_data:
          description: List of observables (IPs, domains, hashes) related to this
            alert
      required:
      - description
      - source
      - title
    AlertDetail:
      type: object
      description: Detailed serializer for Alert, used in detail views.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        severity_display:
          type: string
          readOnly: true
        source:
          type: string
          maxLength: 100
        source_ref:
          type: string
          title: Source Reference
          maxLength: 100
        status:
          $ref: '#/components/schemas/Status42eEnum'
        status_display:
          type: string
          readOnly: true
        company:
          type: string
          format: uuid
        created_by:
          allOf:
          - $ref: '#/components/schemas/UserLight'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        tags:
          type: array
          items:
            type: string
            maxLength: 50
        tlp:
          allOf:
          - $ref: '#/components/schemas/Tlp563Enum'
          title: TLP (Traffic Light Protocol)
          minimum: -2147483648
          maximum: 2147483647
        tlp_display:
          type: string
          readOnly: true
        pap:
          allOf:
          - $ref: '#/components/schemas/PapEnum'
          title: PAP (Permissible Actions Protocol)
          minimum: -2147483648
          maximum: 2147483647
        pap_display:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
          title: Alert Date
        artifact_count:
          type: integer
          readOnly: true
          description: Number of attached observables/artifacts
        incidents:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        observables:
          type: array
          items:
            $ref: '#/components/schemas/ObservableLight'
          readOnly: true
        observable_data:
          description: List of observables (IPs, domains, hashes) related to this
            alert
        external_source:
          type: string
          description: External system that generated the alert (e.g., MISP, SIEM,
            Firewall)
          maxLength: 100
        raw_payload:
          description: Original alert data as received from the source system
      required:
      - description
      - external_source
      - source
      - source_ref
      - title
    AlertLight:
      type: object
      description: Simplified Alert serializer used in IncidentDetailSerializer.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          readOnly: true
        severity:
          allOf:
          - $ref: '#/components/schemas/SeverityEnum'
          readOnly: true
        severity_display:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status42eEnum'
          readOnly: true
        status_display:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        date:
          type: string
          format: date-time
          readOnly: true
          title: Alert Date
        source:
          type: string
          readOnly: true
        source_ref:
          type: string
          readOnly: true
          title: Source Reference
        tags:
          type: array
          items:
            type: string
            maxLength: 50
          readOnly: true
        tlp:
          allOf:
          - $ref: '#/components/schemas/Tlp563Enum'
          readOnly: true
          title: TLP (Traffic Light Protocol)
        pap:
          allOf:
          - $ref: '#/components/schemas/PapEnum'
          readOnly: true
          title: PAP (Permissible Actions Protocol)
    AlertMitreMapping:
      type: object
      description: Serializer for mappings between Alerts and MITRE ATT&CK Techniques
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        alert:
          type: string
          format: uuid
        technique:
          type: string
          format: uuid
        technique_detail:
          allOf:
          - $ref: '#/components/schemas/MitreTechnique'
          readOnly: true
        confidence:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        auto_detected:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - alert
      - technique
    AlertMitreMappingRequest:
      type: object
      description: Serializer for mappings between Alerts and MITRE ATT&CK Techniques
      properties:
        alert:
          type: string
          format: uuid
        technique:
          type: string
          format: uuid
        confidence:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        auto_detected:
          type: boolean
      required:
      - alert
      - technique
    AlertRequest:
      type: object
      description: Primary serializer for the Alert model.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          minLength: 1
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        source:
          type: string
          minLength: 1
          maxLength: 100
        source_ref:
          type: string
          title: Source Reference
          maxLength: 100
        status:
          $ref: '#/components/schemas/Status42eEnum'
        company:
          type: string
          format: uuid
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        tlp:
          allOf:
          - $ref: '#/components/schemas/Tlp563Enum'
          title: TLP (Traffic Light Protocol)
          minimum: -2147483648
          maximum: 2147483647
        pap:
          allOf:
          - $ref: '#/components/schemas/PapEnum'
          title: PAP (Permissible Actions Protocol)
          minimum: -2147483648
          maximum: 2147483647
        date:
          type: string
          format: date-time
          title: Alert Date
      required:
      - description
      - source
      - title
    AlertUpdateRequest:
      type: object
      description: Serializer for alert updates, with limited fields.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          minLength: 1
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        status:
          $ref: '#/components/schemas/Status42eEnum'
        source_ref:
          type: string
          title: Source Reference
          maxLength: 100
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        tlp:
          $ref: '#/components/schemas/Tlp563Enum'
        pap:
          $ref: '#/components/schemas/PapEnum'
      required:
      - description
      - pap
      - severity
      - status
      - title
      - tlp
    AssigneeLight:
      type: object
      description: Lightweight serializer for User model when used as an assignee
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
    Category41eEnum:
      enum:
      - alert
      - incident
      - task
      - system
      - report
      type: string
      description: |-
        * `alert` - Alert
        * `incident` - Incident
        * `task` - Task
        * `system` - System
        * `report` - Report
    ChannelTypeEnum:
      enum:
      - email
      - slack
      - mattermost
      - webhook
      - in_app
      - sms
      type: string
      description: |-
        * `email` - Email
        * `slack` - Slack
        * `mattermost` - Mattermost
        * `webhook` - Webhook
        * `in_app` - In-App
        * `sms` - SMS
    Company:
      type: object
      description: Primary serializer for the Company model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user_count:
          type: integer
          readOnly: true
      required:
      - name
    CompanyCreate:
      type: object
      description: |-
        Serializer for company creation with admin user binding.

        Requires creating an admin user (admin_company) for each company.
        Only the superuser can perform this operation.
      properties:
        name:
          type: string
          maxLength: 255
      required:
      - name
    CompanyCreateRequest:
      type: object
      description: |-
        Serializer for company creation with admin user binding.

        Requires creating an admin user (admin_company) for each company.
        Only the superuser can perform this operation.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        admin_user:
          type: object
          additionalProperties: {}
          writeOnly: true
      required:
      - admin_user
      - name
    CompanyDetail:
      type: object
      description: Detailed serializer for Company, including associated users.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user_count:
          type: integer
          readOnly: true
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserNested'
          readOnly: true
      required:
      - name
    CompanyNested:
      type: object
      description: Simplified Company serializer used in UserSerializer.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    CompanyRequest:
      type: object
      description: Primary serializer for the Company model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
      required:
      - name
    CustomTokenObtainPairRequest:
      type: object
      description: Custom JWT serializer that returns user data along with tokens.
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    DeactivateUsersRequest:
      type: object
      description: Serializer for deactivating multiple users in a company.
      properties:
        user_ids:
          type: array
          items:
            type: string
            format: uuid
          description: List of user IDs to deactivate
      required:
      - user_ids
    EmailChannel:
      type: object
      description: Specialized serializer for Email notification channels.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        channel_type:
          allOf:
          - $ref: '#/components/schemas/ChannelTypeEnum'
          readOnly: true
        is_enabled:
          type: boolean
        config: {}
        company:
          type: string
          format: uuid
        company_data:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - channel_type
      - company
      - name
    EmailChannelRequest:
      type: object
      description: Specialized serializer for Email notification channels.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        is_enabled:
          type: boolean
        config: {}
        company:
          type: string
          format: uuid
      required:
      - company
      - name
    EmailPasswordTokenObtainRequest:
      type: object
      description: Serializer to obtain JWT token using email and password instead
        of username/password.
      properties:
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
      - email
      - password
    EnrichObservableRequestRequest:
      type: object
      description: Serializer for observable enrichment requests.
      properties:
        ioc_type:
          allOf:
          - $ref: '#/components/schemas/IocTypeEnum'
          description: |-
            Type of IOC (ip, domain, hash, etc.)

            * `ip` - IP Address
            * `domain` - Domain
            * `url` - URL
            * `md5` - MD5 Hash
            * `sha1` - SHA1 Hash
            * `sha256` - SHA256 Hash
            * `email` - Email Address
            * `cve` - CVE
            * `filename` - Filename
            * `filepath` - Filepath
            * `registry` - Registry Key
            * `other` - Other
        ioc_value:
          type: string
          minLength: 1
          description: Value of the IOC to enrich
          maxLength: 1000
        description:
          type: string
          minLength: 1
          description: Optional description of the IOC
          maxLength: 1000
      required:
      - ioc_type
      - ioc_value
    EnrichedIOC:
      type: object
      description: Serializer for enriched IOCs.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        company:
          type: string
          format: uuid
          readOnly: true
        company_name:
          type: string
          readOnly: true
        ioc_type:
          allOf:
          - $ref: '#/components/schemas/IocTypeEnum'
          readOnly: true
        ioc_type_display:
          type: string
          readOnly: true
        value:
          type: string
          readOnly: true
          title: IOC Value
        status:
          allOf:
          - $ref: '#/components/schemas/EnrichedIOCStatusEnum'
          readOnly: true
          title: Enrichment Status
        status_display:
          type: string
          readOnly: true
        first_seen:
          type: string
          format: date-time
          readOnly: true
        last_checked:
          type: string
          format: date-time
          readOnly: true
        last_matched:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        source:
          type: string
          readOnly: true
          description: Original source of the IOC (alert, feed, manual)
        description:
          type: string
          readOnly: true
        tlp:
          allOf:
          - $ref: '#/components/schemas/EnrichedIOCTlpEnum'
          readOnly: true
        confidence:
          type: number
          format: double
          readOnly: true
        tags:
          readOnly: true
          description: Tags associated with this IOC
        feed_matches:
          type: array
          items:
            $ref: '#/components/schemas/IOCFeedMatch'
          readOnly: true
        match_count:
          type: integer
          readOnly: true
        es_index:
          type: string
          readOnly: true
          title: Elasticsearch Index
          description: Name of the Elasticsearch index where this IOC is stored
        es_doc_id:
          type: string
          readOnly: true
          title: Elasticsearch Document ID
          description: ID of the document in Elasticsearch
    EnrichedIOCStatusEnum:
      enum:
      - pending
      - enriched
      - not_found
      type: string
      description: |-
        * `pending` - Pending
        * `enriched` - Enriched
        * `not_found` - Not Found
    EnrichedIOCTlpEnum:
      enum:
      - white
      - green
      - amber
      - red
      type: string
      description: |-
        * `white` - TLP:WHITE
        * `green` - TLP:GREEN
        * `amber` - TLP:AMBER
        * `red` - TLP:RED
    EventTypeEnum:
      enum:
      - alert_created
      - alert_updated
      - alert_escalated
      - incident_created
      - incident_updated
      - incident_closed
      - task_created
      - task_updated
      - task_completed
      - custom
      type: string
      description: |-
        * `alert_created` - Alert Created
        * `alert_updated` - Alert Updated
        * `alert_escalated` - Alert Escalated to Incident
        * `incident_created` - Incident Created
        * `incident_updated` - Incident Updated
        * `incident_closed` - Incident Closed
        * `task_created` - Task Created
        * `task_updated` - Task Updated
        * `task_completed` - Task Completed
        * `custom` - Custom Event
    FeedExecutionRecord:
      type: object
      description: Serializer for feed execution records.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        feed:
          type: string
          format: uuid
          readOnly: true
          title: Feed Module
        feed_name:
          type: string
          readOnly: true
        executed_by:
          allOf:
          - $ref: '#/components/schemas/UserBasic'
          readOnly: true
        source:
          allOf:
          - $ref: '#/components/schemas/SourceEnum'
          readOnly: true
          title: Execution Source
        status:
          allOf:
          - $ref: '#/components/schemas/FeedExecutionRecordStatusEnum'
          readOnly: true
          title: Execution Status
        started_at:
          type: string
          format: date-time
          readOnly: true
        ended_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        duration_seconds:
          type: number
          format: double
          readOnly: true
        log:
          type: string
          readOnly: true
          title: Execution Log
          description: Detailed log of the execution process
        iocs_processed:
          type: integer
          readOnly: true
          description: Number of IOCs processed during execution
        error_message:
          type: string
          readOnly: true
          description: Error message if execution failed
    FeedExecutionRecordStatusEnum:
      enum:
      - pending
      - running
      - success
      - failed
      type: string
      description: |-
        * `pending` - Pending
        * `running` - Running
        * `success` - Success
        * `failed` - Failed
    FeedModule:
      type: object
      description: Detailed serializer for feed modules.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          title: Module Name
          maxLength: 100
        description:
          type: string
        module_type:
          allOf:
          - $ref: '#/components/schemas/ModuleTypeEnum'
          readOnly: true
        is_active:
          type: boolean
          title: Active
        company:
          type: string
          format: uuid
          nullable: true
          description: Leave empty for global modules accessible only to superadmins
        company_name:
          type: string
          readOnly: true
        is_global:
          type: boolean
          readOnly: true
        can_execute:
          type: boolean
          readOnly: true
        feed_url:
          type: string
          format: uri
          maxLength: 500
        interval_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Update Interval (hours)
        auto_mark_as_ioc:
          type: boolean
        last_run:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        last_error:
          type: string
          readOnly: true
        error_count:
          type: integer
          readOnly: true
        last_successful_fetch:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        total_iocs_imported:
          type: integer
          readOnly: true
        total_processed:
          type: integer
          readOnly: true
        success_rate:
          type: number
          format: double
          readOnly: true
        feed_type:
          type: string
          nullable: true
          readOnly: true
        cron_schedule:
          type: string
          description: Cron expression for scheduled execution (e.g., "0 */12 * *
            *" for every 12 hours)
          maxLength: 100
      required:
      - feed_url
      - name
    FeedModuleList:
      type: object
      description: Serializer for listing feed modules.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
          title: Module Name
        description:
          type: string
          readOnly: true
        module_type:
          allOf:
          - $ref: '#/components/schemas/ModuleTypeEnum'
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
          title: Active
        company:
          type: string
          format: uuid
          readOnly: true
          nullable: true
          description: Leave empty for global modules accessible only to superadmins
        company_name:
          type: string
          readOnly: true
        is_global:
          type: boolean
          readOnly: true
        can_execute:
          type: boolean
          readOnly: true
        last_run:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        last_error:
          type: string
          readOnly: true
        error_count:
          type: integer
          readOnly: true
        total_iocs_imported:
          type: integer
          readOnly: true
        total_processed:
          type: integer
          readOnly: true
        success_rate:
          type: number
          format: double
          readOnly: true
        last_execution_status:
          nullable: true
          readOnly: true
        cron_schedule:
          type: string
          readOnly: true
          description: Cron expression for scheduled execution (e.g., "0 */12 * *
            *" for every 12 hours)
    FeedModuleRequest:
      type: object
      description: Detailed serializer for feed modules.
      properties:
        name:
          type: string
          minLength: 1
          title: Module Name
          maxLength: 100
        description:
          type: string
        is_active:
          type: boolean
          title: Active
        company:
          type: string
          format: uuid
          nullable: true
          description: Leave empty for global modules accessible only to superadmins
        feed_url:
          type: string
          format: uri
          minLength: 1
          maxLength: 500
        interval_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Update Interval (hours)
        auto_mark_as_ioc:
          type: boolean
        cron_schedule:
          type: string
          description: Cron expression for scheduled execution (e.g., "0 */12 * *
            *" for every 12 hours)
          maxLength: 100
      required:
      - feed_url
      - name
    FormatEnum:
      enum:
      - pdf
      - markdown
      - html
      type: string
      description: |-
        * `pdf` - pdf
        * `markdown` - markdown
        * `html` - html
    IOCFeedMatch:
      type: object
      description: Serializer for IOC feed matches.
      properties:
        id:
          type: integer
          readOnly: true
        feed:
          type: string
          format: uuid
          readOnly: true
        feed_name:
          type: string
          readOnly: true
        match_time:
          type: string
          format: date-time
          readOnly: true
        feed_confidence:
          type: number
          format: double
          readOnly: true
        feed_tags:
          readOnly: true
        metadata:
          readOnly: true
          description: Additional metadata about the match
    Incident:
      type: object
      description: Primary serializer for the Incident model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        severity_display:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/Status14bEnum'
        status_display:
          type: string
          readOnly: true
        company:
          type: string
          format: uuid
          readOnly: true
        created_by:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        alert_count:
          type: integer
          readOnly: true
        tags:
          type: array
          items:
            type: string
            maxLength: 50
        tlp:
          $ref: '#/components/schemas/Tlp563Enum'
        tlp_display:
          type: string
          readOnly: true
        pap:
          $ref: '#/components/schemas/PapEnum'
        pap_display:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - description
      - pap
      - severity
      - status
      - title
      - tlp
    IncidentAssignRequest:
      type: object
      description: Serializer for assigning incidents to users.
      properties:
        assignee:
          type: string
          minLength: 1
      required:
      - assignee
    IncidentCreateRequest:
      type: object
      description: Serializer for incident creation with custom validation.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          minLength: 1
        severity:
          allOf:
          - $ref: '#/components/schemas/SeverityEnum'
          default: medium
        status:
          allOf:
          - $ref: '#/components/schemas/Status14bEnum'
          default: open
        alert_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        tlp:
          allOf:
          - $ref: '#/components/schemas/Tlp563Enum'
          default: 2
        pap:
          allOf:
          - $ref: '#/components/schemas/PapEnum'
          default: 2
        start_date:
          type: string
          format: date-time
      required:
      - description
      - title
    IncidentDetail:
      type: object
      description: Detailed serializer for Incident, used in detail views.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        severity_display:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/Status14bEnum'
        status_display:
          type: string
          readOnly: true
        company:
          type: string
          format: uuid
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/IncidentUserLight'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        alert_count:
          type: integer
          readOnly: true
        tags:
          type: array
          items:
            type: string
            maxLength: 50
        tlp:
          $ref: '#/components/schemas/Tlp563Enum'
        tlp_display:
          type: string
          readOnly: true
        pap:
          $ref: '#/components/schemas/PapEnum'
        pap_display:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        related_alerts:
          type: array
          items:
            $ref: '#/components/schemas/AlertLight'
          readOnly: true
        assignee:
          allOf:
          - $ref: '#/components/schemas/IncidentUserLight'
          readOnly: true
        incident_observables:
          type: array
          items:
            $ref: '#/components/schemas/IncidentObservable'
          readOnly: true
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/IncidentTask'
          readOnly: true
        timeline:
          description: Chronological order of events and actions
        observable_count:
          type: integer
          readOnly: true
        task_count:
          type: integer
          readOnly: true
        custom_fields:
          description: User-defined metadata for the incident
        linked_entities:
          type: array
          items:
            type: string
            maxLength: 255
          description: Links to external systems (URLs, ticket IDs, etc.)
        sentinelvision_responders:
          description: List of SentinelVision responders to run on this incident
      required:
      - description
      - pap
      - severity
      - status
      - title
      - tlp
    IncidentMitreMapping:
      type: object
      description: Serializer for mappings between Incidents and MITRE ATT&CK Techniques
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        incident:
          type: string
          format: uuid
        technique:
          type: string
          format: uuid
        technique_detail:
          allOf:
          - $ref: '#/components/schemas/MitreTechnique'
          readOnly: true
        confidence:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - incident
      - technique
    IncidentMitreMappingRequest:
      type: object
      description: Serializer for mappings between Incidents and MITRE ATT&CK Techniques
      properties:
        incident:
          type: string
          format: uuid
        technique:
          type: string
          format: uuid
        confidence:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        notes:
          type: string
          nullable: true
      required:
      - incident
      - technique
    IncidentObservable:
      type: object
      description: Serializer for the IncidentObservable through model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        observable:
          allOf:
          - $ref: '#/components/schemas/IncidentObservableLight'
          readOnly: true
        is_ioc:
          type: boolean
          title: Is an IOC
          description: Indicates if this observable is an Indicator of Compromise
            for this incident
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
    IncidentObservableCreateRequest:
      type: object
      description: Serializer for creating IncidentObservable relationships
      properties:
        observable:
          type: string
          format: uuid
        is_ioc:
          type: boolean
          title: Is an IOC
          description: Indicates if this observable is an Indicator of Compromise
            for this incident
        description:
          type: string
      required:
      - observable
    IncidentObservableLight:
      type: object
      description: Lightweight serializer for Observable model used in incident context
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/Type7dbEnum'
          readOnly: true
        value:
          type: string
          readOnly: true
        is_ioc:
          type: boolean
          readOnly: true
          description: Whether this observable is confirmed as an Indicator of Compromise
        tags:
          type: array
          items:
            type: string
            maxLength: 50
          readOnly: true
    IncidentReportFormatRequest:
      type: object
      description: Serializer for requesting an incident report in a specific format
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/FormatEnum'
          default: pdf
          description: |-
            Format of the report to generate

            * `pdf` - pdf
            * `markdown` - markdown
            * `html` - html
        include_timeline:
          type: boolean
          default: true
          description: Whether to include the timeline in the report
        include_observables:
          type: boolean
          default: true
          description: Whether to include observables in the report
        include_tasks:
          type: boolean
          default: true
          description: Whether to include tasks in the report
        include_alerts:
          type: boolean
          default: true
          description: Whether to include related alerts in the report
    IncidentRequest:
      type: object
      description: Primary serializer for the Incident model.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          minLength: 1
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        status:
          $ref: '#/components/schemas/Status14bEnum'
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        tlp:
          $ref: '#/components/schemas/Tlp563Enum'
        pap:
          $ref: '#/components/schemas/PapEnum'
        start_date:
          type: string
          format: date-time
      required:
      - description
      - pap
      - severity
      - status
      - title
      - tlp
    IncidentTask:
      type: object
      description: Serializer for IncidentTask model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        status:
          $ref: '#/components/schemas/StatusDc7Enum'
        status_display:
          type: string
          readOnly: true
        priority:
          type: integer
          maximum: 32767
          minimum: 0
          description: Task priority (1-5, with 5 being highest)
        due_date:
          type: string
          format: date-time
          nullable: true
        assignee:
          allOf:
          - $ref: '#/components/schemas/AssigneeLight'
          readOnly: true
        is_overdue:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        completed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - status
      - title
    IncidentTaskCreateRequest:
      type: object
      description: Serializer for creating incident tasks
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/StatusDc7Enum'
          default: pending
        priority:
          type: integer
          maximum: 32767
          minimum: 0
          description: Task priority (1-5, with 5 being highest)
        due_date:
          type: string
          format: date-time
          nullable: true
        assignee_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
      required:
      - title
    IncidentTimelineEntryRequest:
      type: object
      description: Serializer for adding timeline entries to incidents.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        content:
          type: string
          nullable: true
        event_type:
          type: string
          minLength: 1
          default: note
        timestamp:
          type: string
          format: date-time
      required:
      - title
    IncidentUpdateRequest:
      type: object
      description: Serializer for incident updates, with limited fields.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          minLength: 1
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        status:
          $ref: '#/components/schemas/Status14bEnum'
        add_alert_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
        remove_alert_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        tlp:
          $ref: '#/components/schemas/Tlp563Enum'
        pap:
          $ref: '#/components/schemas/PapEnum'
        start_date:
          type: string
          format: date-time
      required:
      - description
      - pap
      - severity
      - status
      - title
      - tlp
    IncidentUserLight:
      type: object
      description: Simplified User serializer used in IncidentDetailSerializer.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          readOnly: true
    IocTypeEnum:
      enum:
      - ip
      - domain
      - url
      - md5
      - sha1
      - sha256
      - email
      - cve
      - filename
      - filepath
      - registry
      - other
      type: string
      description: |-
        * `ip` - IP Address
        * `domain` - Domain
        * `url` - URL
        * `md5` - MD5 Hash
        * `sha1` - SHA1 Hash
        * `sha256` - SHA256 Hash
        * `email` - Email Address
        * `cve` - CVE
        * `filename` - Filename
        * `filepath` - Filepath
        * `registry` - Registry Key
        * `other` - Other
    KnowledgeArticle:
      type: object
      description: Serializer for KnowledgeArticle model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        slug:
          type: string
          maxLength: 250
          pattern: ^[-a-zA-Z0-9_]+$
        content:
          type: string
        html_content:
          type: string
          readOnly: true
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        category:
          type: string
          format: uuid
          nullable: true
        category_name:
          type: string
          nullable: true
          readOnly: true
        tags:
          type: array
          items:
            type: string
            maxLength: 50
        company:
          type: string
          format: uuid
          nullable: true
          description: If null, this is a global article visible to all companies
        author:
          type: integer
          readOnly: true
        author_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        published_at:
          type: string
          format: date-time
          nullable: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        is_reviewed:
          type: boolean
          title: Reviewed
        version:
          type: integer
          readOnly: true
      required:
      - content
      - slug
      - title
    KnowledgeArticleRequest:
      type: object
      description: Serializer for KnowledgeArticle model.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        slug:
          type: string
          minLength: 1
          maxLength: 250
          pattern: ^[-a-zA-Z0-9_]+$
        content:
          type: string
          minLength: 1
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        category:
          type: string
          format: uuid
          nullable: true
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        company:
          type: string
          format: uuid
          nullable: true
          description: If null, this is a global article visible to all companies
        published_at:
          type: string
          format: date-time
          nullable: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        is_reviewed:
          type: boolean
          title: Reviewed
      required:
      - content
      - slug
      - title
    KnowledgeCategory:
      type: object
      description: Serializer for KnowledgeCategory model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 120
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Category
        company:
          type: string
          format: uuid
          nullable: true
          description: If null, this is a global category visible to all companies
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
      - slug
    KnowledgeCategoryRequest:
      type: object
      description: Serializer for KnowledgeCategory model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        slug:
          type: string
          minLength: 1
          maxLength: 120
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Category
        company:
          type: string
          format: uuid
          nullable: true
          description: If null, this is a global category visible to all companies
      required:
      - name
      - slug
    MattermostChannel:
      type: object
      description: Specialized serializer for Mattermost notification channels.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        channel_type:
          allOf:
          - $ref: '#/components/schemas/ChannelTypeEnum'
          readOnly: true
        is_enabled:
          type: boolean
        config: {}
        company:
          type: string
          format: uuid
        company_data:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - channel_type
      - company
      - name
    MattermostChannelRequest:
      type: object
      description: Specialized serializer for Mattermost notification channels.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        is_enabled:
          type: boolean
        config: {}
        company:
          type: string
          format: uuid
      required:
      - company
      - name
    MitreMitigation:
      type: object
      description: Serializer for MITRE ATT&CK Mitigations with basic fields
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        external_id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
    MitreMitigationDetail:
      type: object
      description: Detailed serializer for MITRE ATT&CK Mitigations including technique
        count
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        external_id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        technique_count:
          type: integer
          readOnly: true
        techniques:
          type: array
          items:
            $ref: '#/components/schemas/MitreTechnique'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    MitreRelationship:
      type: object
      description: Serializer for MITRE ATT&CK Relationships
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        source_id:
          type: string
          readOnly: true
        target_id:
          type: string
          readOnly: true
        relationship_type:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    MitreTactic:
      type: object
      description: Serializer for MITRE ATT&CK Tactics with basic fields
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        external_id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
    MitreTacticDetail:
      type: object
      description: Detailed serializer for MITRE ATT&CK Tactics including technique
        count
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        external_id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        technique_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    MitreTechnique:
      type: object
      description: Serializer for MITRE ATT&CK Techniques with basic fields
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        external_id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        platforms:
          type: array
          items:
            type: string
            maxLength: 100
          readOnly: true
        is_subtechnique:
          type: boolean
          readOnly: true
    ModuleTypeEnum:
      enum:
      - feed
      - analyzer
      - responder
      type: string
      description: |-
        * `feed` - Feed Module
        * `analyzer` - Analyzer Module
        * `responder` - Responder Module
    Notification:
      type: object
      description: Full serializer for notifications with nested recipient data
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        message:
          type: string
        category:
          $ref: '#/components/schemas/Category41eEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        related_object_type:
          type: string
          nullable: true
          maxLength: 50
        related_object_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        company:
          type: string
          format: uuid
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/UserLite'
          readOnly: true
        is_company_wide:
          type: boolean
        delivery_statuses:
          type: array
          items:
            $ref: '#/components/schemas/NotificationDeliveryStatus'
          readOnly: true
      required:
      - category
      - company
      - message
      - title
    NotificationChannel:
      type: object
      description: Base serializer for NotificationChannel model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        channel_type:
          $ref: '#/components/schemas/ChannelTypeEnum'
        is_enabled:
          type: boolean
        config: {}
        company:
          type: string
          format: uuid
        company_data:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - channel_type
      - company
      - name
    NotificationChannelLite:
      type: object
      description: Lite serializer for notification channels, used in listings and
        references
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        channel_type:
          $ref: '#/components/schemas/ChannelTypeEnum'
        is_enabled:
          type: boolean
      required:
      - channel_type
      - name
    NotificationChannelRequest:
      type: object
      description: Base serializer for NotificationChannel model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        channel_type:
          $ref: '#/components/schemas/ChannelTypeEnum'
        is_enabled:
          type: boolean
        config: {}
        company:
          type: string
          format: uuid
      required:
      - channel_type
      - company
      - name
    NotificationCreateRequest:
      type: object
      description: Serializer for creating new notifications
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        message:
          type: string
          minLength: 1
        category:
          $ref: '#/components/schemas/Category41eEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        related_object_type:
          type: string
          nullable: true
          maxLength: 50
        related_object_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        company:
          type: string
          format: uuid
        recipient_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
        is_company_wide:
          type: boolean
      required:
      - category
      - company
      - message
      - title
    NotificationDeliveryStatus:
      type: object
      description: Serializer for notification delivery statuses
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/NotificationDeliveryStatusStatusEnum'
        channel:
          type: string
          format: uuid
        sent_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        delivered_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        read_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        error_message:
          type: string
          nullable: true
      required:
      - channel
    NotificationDeliveryStatusStatusEnum:
      enum:
      - pending
      - sent
      - delivered
      - failed
      type: string
      description: |-
        * `pending` - Pending
        * `sent` - Sent
        * `delivered` - Delivered
        * `failed` - Failed
    NotificationLite:
      type: object
      description: Lite serializer for notifications, used in listings and references
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        category:
          $ref: '#/components/schemas/Category41eEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_company_wide:
          type: boolean
      required:
      - category
      - title
    NotificationLiteRequest:
      type: object
      description: Lite serializer for notifications, used in listings and references
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        category:
          $ref: '#/components/schemas/Category41eEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        is_company_wide:
          type: boolean
      required:
      - category
      - title
    NotificationRule:
      type: object
      description: Serializer for NotificationRule model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        is_active:
          type: boolean
        conditions:
          description: Conditions that must be met for the rule to trigger
        message_template:
          type: string
          description: Template for notification message. Use {{variables}} for dynamic
            content.
        custom_event_id:
          type: string
          nullable: true
          description: ID for custom event types
          maxLength: 100
        channels:
          type: array
          items:
            type: string
            format: uuid
        channels_data:
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannel'
          readOnly: true
        company:
          type: string
          format: uuid
        company_data:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        created_by:
          type: integer
          nullable: true
        created_by_data:
          allOf:
          - $ref: '#/components/schemas/NotificationUser'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - channels
      - company
      - event_type
      - message_template
      - name
    NotificationRuleRequest:
      type: object
      description: Serializer for NotificationRule model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        is_active:
          type: boolean
        conditions:
          description: Conditions that must be met for the rule to trigger
        message_template:
          type: string
          minLength: 1
          description: Template for notification message. Use {{variables}} for dynamic
            content.
        custom_event_id:
          type: string
          nullable: true
          description: ID for custom event types
          maxLength: 100
        channels:
          type: array
          items:
            type: string
            format: uuid
        company:
          type: string
          format: uuid
        created_by:
          type: integer
          nullable: true
      required:
      - channels
      - company
      - event_type
      - message_template
      - name
    NotificationTestRequest:
      type: object
      description: Serializer for notification channel testing.
      properties:
        channel_id:
          type: integer
          description: ID of the notification channel to test
        message:
          type: string
          default: This is a test notification from SentinelIQ.
          description: Custom test message (optional)
      required:
      - channel_id
    NotificationUser:
      type: object
      description: Simple serializer for User model in notification context.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - username
    NotificationUserRequest:
      type: object
      description: Simple serializer for User model in notification context.
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - username
    Observable:
      type: object
      description: Serializer for Observable model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          $ref: '#/components/schemas/Type7dbEnum'
        type_display:
          type: string
          readOnly: true
        value:
          type: string
        description:
          type: string
        category:
          allOf:
          - $ref: '#/components/schemas/ObservableCategoryEnum'
          default: other
        category_display:
          type: string
          readOnly: true
        tags:
          type: array
          items:
            type: string
            maxLength: 50
        tlp:
          allOf:
          - $ref: '#/components/schemas/Tlp563Enum'
          default: 2
        tlp_display:
          type: string
          readOnly: true
        alert:
          type: string
          format: uuid
          nullable: true
          title: Related Alert
        incident:
          type: string
          format: uuid
          nullable: true
          title: Related Incident
        enrichment_data:
          description: Additional data from enrichment services
        is_ioc:
          type: boolean
          description: Whether this observable is confirmed as an Indicator of Compromise
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - type
      - value
    ObservableAddToAlertRequest:
      type: object
      description: Serializer for adding an observable to an alert
      properties:
        observable:
          type: string
          format: uuid
        is_ioc:
          type: boolean
          default: false
          description: Mark as Indicator of Compromise
        description:
          type: string
          description: Optional description
      required:
      - observable
    ObservableCategoryEnum:
      enum:
      - antivirus
      - artifacts
      - attribution
      - external_analysis
      - financial_fraud
      - internal_reference
      - network_activity
      - other
      - payload_delivery
      - payload_installation
      - payload_type
      - persistence
      - person
      - social_network
      - support_tool
      - targeting
      type: string
      description: |-
        * `antivirus` - Antivirus
        * `artifacts` - Artifacts
        * `attribution` - Attribution
        * `external_analysis` - External Analysis
        * `financial_fraud` - Financial Fraud
        * `internal_reference` - Internal Reference
        * `network_activity` - Network Activity
        * `other` - Other
        * `payload_delivery` - Payload Delivery
        * `payload_installation` - Payload Installation
        * `payload_type` - Payload Type
        * `persistence` - Persistence
        * `person` - Person
        * `social_network` - Social Network
        * `support_tool` - Support Tool
        * `targeting` - Targeting
    ObservableCreateRequest:
      type: object
      description: Serializer for creating observables.
      properties:
        type:
          $ref: '#/components/schemas/Type7dbEnum'
        value:
          type: string
          minLength: 1
        description:
          type: string
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        tlp:
          allOf:
          - $ref: '#/components/schemas/Tlp563Enum'
          default: 2
        alert:
          type: string
          format: uuid
          nullable: true
          title: Related Alert
        incident:
          type: string
          format: uuid
          nullable: true
          title: Related Incident
        is_ioc:
          type: boolean
          description: Whether this observable is confirmed as an Indicator of Compromise
      required:
      - type
      - value
    ObservableLight:
      type: object
      description: Lightweight serializer for Observable model used in alert context
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/Type7dbEnum'
          readOnly: true
        value:
          type: string
          readOnly: true
        is_ioc:
          type: boolean
          readOnly: true
          description: Whether this observable is confirmed as an Indicator of Compromise
        tags:
          type: array
          items:
            type: string
            maxLength: 50
          readOnly: true
    ObservableMitreMapping:
      type: object
      description: Serializer for mappings between Observables and MITRE ATT&CK Techniques
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        observable:
          type: string
          format: uuid
        technique:
          type: string
          format: uuid
        technique_detail:
          allOf:
          - $ref: '#/components/schemas/MitreTechnique'
          readOnly: true
        confidence:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        auto_detected:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - observable
      - technique
    ObservableMitreMappingRequest:
      type: object
      description: Serializer for mappings between Observables and MITRE ATT&CK Techniques
      properties:
        observable:
          type: string
          format: uuid
        technique:
          type: string
          format: uuid
        confidence:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        auto_detected:
          type: boolean
      required:
      - observable
      - technique
    ObservableRequest:
      type: object
      description: Serializer for Observable model.
      properties:
        type:
          $ref: '#/components/schemas/Type7dbEnum'
        value:
          type: string
          minLength: 1
        description:
          type: string
        category:
          allOf:
          - $ref: '#/components/schemas/ObservableCategoryEnum'
          default: other
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        tlp:
          allOf:
          - $ref: '#/components/schemas/Tlp563Enum'
          default: 2
        alert:
          type: string
          format: uuid
          nullable: true
          title: Related Alert
        incident:
          type: string
          format: uuid
          nullable: true
          title: Related Incident
        enrichment_data:
          description: Additional data from enrichment services
        is_ioc:
          type: boolean
          description: Whether this observable is confirmed as an Indicator of Compromise
      required:
      - type
      - value
    PaginatedAlertList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
    PaginatedAlertMitreMappingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AlertMitreMapping'
    PaginatedCompanyList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Company'
    PaginatedEnrichedIOCList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EnrichedIOC'
    PaginatedFeedExecutionRecordList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedExecutionRecord'
    PaginatedFeedModuleListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedModuleList'
    PaginatedIncidentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Incident'
    PaginatedIncidentMitreMappingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/IncidentMitreMapping'
    PaginatedIncidentObservableList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/IncidentObservable'
    PaginatedIncidentTaskList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/IncidentTask'
    PaginatedMitreMitigationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MitreMitigation'
    PaginatedMitreRelationshipList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MitreRelationship'
    PaginatedMitreTacticList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MitreTactic'
    PaginatedNotificationChannelLiteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannelLite'
    PaginatedNotificationLiteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationLite'
    PaginatedNotificationRuleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationRule'
    PaginatedObservableLightList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ObservableLight'
    PaginatedObservableMitreMappingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ObservableMitreMapping'
    PaginatedTaskList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Task'
    PaginatedTimelineEventList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TimelineEvent'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PapEnum:
      enum:
      - 0
      - 1
      - 2
      type: integer
      description: |-
        * `0` - White
        * `1` - Green
        * `2` - Amber
    PatchedAPIUserRequest:
      type: object
      description: Complete serializer for the User model.
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
          minLength: 1
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          default: analyst_company
        company_id:
          type: string
          format: uuid
          writeOnly: true
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
    PatchedAlertMitreMappingRequest:
      type: object
      description: Serializer for mappings between Alerts and MITRE ATT&CK Techniques
      properties:
        alert:
          type: string
          format: uuid
        technique:
          type: string
          format: uuid
        confidence:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        auto_detected:
          type: boolean
    PatchedAlertUpdateRequest:
      type: object
      description: Serializer for alert updates, with limited fields.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          minLength: 1
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        status:
          $ref: '#/components/schemas/Status42eEnum'
        source_ref:
          type: string
          title: Source Reference
          maxLength: 100
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        tlp:
          $ref: '#/components/schemas/Tlp563Enum'
        pap:
          $ref: '#/components/schemas/PapEnum'
    PatchedCompanyRequest:
      type: object
      description: Primary serializer for the Company model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
    PatchedFeedModuleRequest:
      type: object
      description: Detailed serializer for feed modules.
      properties:
        name:
          type: string
          minLength: 1
          title: Module Name
          maxLength: 100
        description:
          type: string
        is_active:
          type: boolean
          title: Active
        company:
          type: string
          format: uuid
          nullable: true
          description: Leave empty for global modules accessible only to superadmins
        feed_url:
          type: string
          format: uri
          minLength: 1
          maxLength: 500
        interval_hours:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Update Interval (hours)
        auto_mark_as_ioc:
          type: boolean
        cron_schedule:
          type: string
          description: Cron expression for scheduled execution (e.g., "0 */12 * *
            *" for every 12 hours)
          maxLength: 100
    PatchedIncidentMitreMappingRequest:
      type: object
      description: Serializer for mappings between Incidents and MITRE ATT&CK Techniques
      properties:
        incident:
          type: string
          format: uuid
        technique:
          type: string
          format: uuid
        confidence:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        notes:
          type: string
          nullable: true
    PatchedIncidentTaskUpdateRequest:
      type: object
      description: Serializer for updating incident tasks
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        status:
          $ref: '#/components/schemas/StatusDc7Enum'
        priority:
          type: integer
          maximum: 32767
          minimum: 0
          description: Task priority (1-5, with 5 being highest)
        due_date:
          type: string
          format: date-time
          nullable: true
        assignee_id:
          type: string
          format: uuid
          writeOnly: true
          nullable: true
    PatchedIncidentUpdateRequest:
      type: object
      description: Serializer for incident updates, with limited fields.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          minLength: 1
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        status:
          $ref: '#/components/schemas/Status14bEnum'
        add_alert_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
        remove_alert_ids:
          type: array
          items:
            type: string
            format: uuid
          writeOnly: true
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        tlp:
          $ref: '#/components/schemas/Tlp563Enum'
        pap:
          $ref: '#/components/schemas/PapEnum'
        start_date:
          type: string
          format: date-time
    PatchedKnowledgeArticleRequest:
      type: object
      description: Serializer for KnowledgeArticle model.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        slug:
          type: string
          minLength: 1
          maxLength: 250
          pattern: ^[-a-zA-Z0-9_]+$
        content:
          type: string
          minLength: 1
        visibility:
          $ref: '#/components/schemas/VisibilityEnum'
        category:
          type: string
          format: uuid
          nullable: true
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        company:
          type: string
          format: uuid
          nullable: true
          description: If null, this is a global article visible to all companies
        published_at:
          type: string
          format: date-time
          nullable: true
        expires_at:
          type: string
          format: date-time
          nullable: true
        is_reviewed:
          type: boolean
          title: Reviewed
    PatchedKnowledgeCategoryRequest:
      type: object
      description: Serializer for KnowledgeCategory model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        slug:
          type: string
          minLength: 1
          maxLength: 120
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
        parent:
          type: string
          format: uuid
          nullable: true
          title: Parent Category
        company:
          type: string
          format: uuid
          nullable: true
          description: If null, this is a global category visible to all companies
    PatchedNotificationChannelRequest:
      type: object
      description: Base serializer for NotificationChannel model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        channel_type:
          $ref: '#/components/schemas/ChannelTypeEnum'
        is_enabled:
          type: boolean
        config: {}
        company:
          type: string
          format: uuid
    PatchedNotificationLiteRequest:
      type: object
      description: Lite serializer for notifications, used in listings and references
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        category:
          $ref: '#/components/schemas/Category41eEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        is_company_wide:
          type: boolean
    PatchedNotificationRuleRequest:
      type: object
      description: Serializer for NotificationRule model.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        is_active:
          type: boolean
        conditions:
          description: Conditions that must be met for the rule to trigger
        message_template:
          type: string
          minLength: 1
          description: Template for notification message. Use {{variables}} for dynamic
            content.
        custom_event_id:
          type: string
          nullable: true
          description: ID for custom event types
          maxLength: 100
        channels:
          type: array
          items:
            type: string
            format: uuid
        company:
          type: string
          format: uuid
        created_by:
          type: integer
          nullable: true
    PatchedObservableMitreMappingRequest:
      type: object
      description: Serializer for mappings between Observables and MITRE ATT&CK Techniques
      properties:
        observable:
          type: string
          format: uuid
        technique:
          type: string
          format: uuid
        confidence:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        auto_detected:
          type: boolean
    PatchedObservableRequest:
      type: object
      description: Serializer for Observable model.
      properties:
        type:
          $ref: '#/components/schemas/Type7dbEnum'
        value:
          type: string
          minLength: 1
        description:
          type: string
        category:
          allOf:
          - $ref: '#/components/schemas/ObservableCategoryEnum'
          default: other
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        tlp:
          allOf:
          - $ref: '#/components/schemas/Tlp563Enum'
          default: 2
        alert:
          type: string
          format: uuid
          nullable: true
          title: Related Alert
        incident:
          type: string
          format: uuid
          nullable: true
          title: Related Incident
        enrichment_data:
          description: Additional data from enrichment services
        is_ioc:
          type: boolean
          description: Whether this observable is confirmed as an Indicator of Compromise
    PatchedTaskRequest:
      type: object
      description: Serializer for Task model.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        status:
          $ref: '#/components/schemas/TaskStatusEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        due_date:
          type: string
          format: date-time
          nullable: true
        incident:
          type: string
          format: uuid
          title: Related Incident
        assigned_to:
          type: integer
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order in the task list
        notes:
          type: string
          description: Additional notes or progress updates
    PatchedUserNotificationPreferenceRequest:
      type: object
      description: Serializer for user notification preferences
      properties:
        email_alerts:
          type: boolean
        email_incidents:
          type: boolean
        email_tasks:
          type: boolean
        email_reports:
          type: boolean
        in_app_alerts:
          type: boolean
        in_app_incidents:
          type: boolean
        in_app_tasks:
          type: boolean
        in_app_reports:
          type: boolean
        slack_alerts:
          type: boolean
        slack_incidents:
          type: boolean
        slack_tasks:
          type: boolean
        slack_critical_only:
          type: boolean
        sms_critical_only:
          type: boolean
        daily_digest:
          type: boolean
        weekly_digest:
          type: boolean
    PatchedUserRequest:
      type: object
      description: Serializer for User model.
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/RoleEnum'
        company:
          type: string
          format: uuid
          nullable: true
    PriorityEnum:
      enum:
      - low
      - medium
      - high
      - critical
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
        * `critical` - Critical
    RoleEnum:
      enum:
      - admin_company
      - analyst_company
      - read_only
      - superuser
      type: string
      description: |-
        * `admin_company` - Admin Company
        * `analyst_company` - Analyst Company
        * `read_only` - Read Only
        * `superuser` - Superuser
    SMSChannel:
      type: object
      description: Specialized serializer for SMS notification channels.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        channel_type:
          allOf:
          - $ref: '#/components/schemas/ChannelTypeEnum'
          readOnly: true
        is_enabled:
          type: boolean
        config: {}
        company:
          type: string
          format: uuid
        company_data:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - channel_type
      - company
      - name
    SMSChannelRequest:
      type: object
      description: Specialized serializer for SMS notification channels.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        is_enabled:
          type: boolean
        config: {}
        company:
          type: string
          format: uuid
      required:
      - company
      - name
    SeverityEnum:
      enum:
      - low
      - medium
      - high
      - critical
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
        * `critical` - Critical
    SlackChannel:
      type: object
      description: Specialized serializer for Slack notification channels.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        channel_type:
          allOf:
          - $ref: '#/components/schemas/ChannelTypeEnum'
          readOnly: true
        is_enabled:
          type: boolean
        config: {}
        company:
          type: string
          format: uuid
        company_data:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - channel_type
      - company
      - name
    SlackChannelRequest:
      type: object
      description: Specialized serializer for Slack notification channels.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        is_enabled:
          type: boolean
        config: {}
        company:
          type: string
          format: uuid
      required:
      - company
      - name
    SourceEnum:
      enum:
      - manual
      - scheduled
      type: string
      description: |-
        * `manual` - Manual Execution
        * `scheduled` - Scheduled Execution
    Status14bEnum:
      enum:
      - open
      - in_progress
      - resolved
      - closed
      type: string
      description: |-
        * `open` - Open
        * `in_progress` - In Progress
        * `resolved` - Resolved
        * `closed` - Closed
    Status42eEnum:
      enum:
      - new
      - in_progress
      - resolved
      - escalated
      type: string
      description: |-
        * `new` - New
        * `in_progress` - In Progress
        * `resolved` - Resolved
        * `escalated` - Escalated
    StatusDc7Enum:
      enum:
      - pending
      - in_progress
      - completed
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `in_progress` - In Progress
        * `completed` - Completed
        * `cancelled` - Cancelled
    Task:
      type: object
      description: Serializer for Task model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        status:
          $ref: '#/components/schemas/TaskStatusEnum'
        status_display:
          type: string
          readOnly: true
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        priority_display:
          type: string
          readOnly: true
        due_date:
          type: string
          format: date-time
          nullable: true
        completion_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        incident:
          type: string
          format: uuid
          title: Related Incident
        assigned_to:
          type: integer
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order in the task list
        notes:
          type: string
          description: Additional notes or progress updates
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - incident
      - priority
      - status
      - title
    TaskRequest:
      type: object
      description: Serializer for Task model.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        status:
          $ref: '#/components/schemas/TaskStatusEnum'
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        due_date:
          type: string
          format: date-time
          nullable: true
        incident:
          type: string
          format: uuid
          title: Related Incident
        assigned_to:
          type: integer
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order in the task list
        notes:
          type: string
          description: Additional notes or progress updates
      required:
      - incident
      - priority
      - status
      - title
    TaskStatusEnum:
      enum:
      - open
      - in_progress
      - completed
      - canceled
      type: string
      description: |-
        * `open` - Open
        * `in_progress` - In Progress
        * `completed` - Completed
        * `canceled` - Canceled
    TimelineEvent:
      type: object
      description: Serializer for the TimelineEvent model.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        incident:
          type: string
          format: uuid
        type:
          allOf:
          - $ref: '#/components/schemas/TimelineEventTypeEnum'
          title: Event Type
        title:
          type: string
          maxLength: 200
        message:
          type: string
          nullable: true
        metadata: {}
        user:
          type: integer
          nullable: true
        user_name:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - incident
      - title
    TimelineEventTypeEnum:
      enum:
      - created
      - updated
      - status_changed
      - assigned
      - alert_linked
      - task_added
      - task_completed
      - note
      - action
      - system
      - closed
      - other
      type: string
      description: |-
        * `created` - Created
        * `updated` - Updated
        * `status_changed` - Status Changed
        * `assigned` - Assigned
        * `alert_linked` - Alert Linked
        * `task_added` - Task Added
        * `task_completed` - Task Completed
        * `note` - Note
        * `action` - Action
        * `system` - System
        * `closed` - Closed
        * `other` - Other
    Tlp563Enum:
      enum:
      - 0
      - 1
      - 2
      - 3
      type: integer
      description: |-
        * `0` - White
        * `1` - Green
        * `2` - Amber
        * `3` - Red
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
    TokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    TokenObtainPairResponse:
      type: object
      description: Serializer for token obtain pair response schema documentation.
      properties:
        access:
          type: string
        refresh:
          type: string
        user: {}
      required:
      - access
      - refresh
      - user
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    TokenRefreshResponseRequest:
      type: object
      description: Serializer for token refresh that also returns user data.
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    Type7dbEnum:
      enum:
      - as
      - domain
      - email
      - email-attachment
      - email-body
      - email-header
      - email-subject
      - hostname
      - ip
      - ip-port
      - mac-address
      - uri
      - url
      - user-agent
      - authentihash
      - filename
      - filepath
      - hash-md5
      - hash-sha1
      - hash-sha256
      - hash-sha512
      - imphash
      - malware-sample
      - mime-type
      - pehash
      - ssdeep
      - mutex
      - named-pipe
      - process
      - process-state
      - regkey
      - regkey|value
      - windows-service-name
      - windows-scheduled-task
      - bank-account-nr
      - bic
      - btc
      - cc-number
      - iban
      - first-name
      - last-name
      - full-name
      - passport-number
      - phone-number
      - sigma
      - snort
      - stix2-pattern
      - yara
      - campaign-name
      - ja3-fingerprint-md5
      - threat-actor
      - vulnerability
      - weakness
      - comment
      - other
      type: string
      description: |-
        * `as` - As
        * `domain` - Domain
        * `email` - Email
        * `email-attachment` - Email Attachment
        * `email-body` - Email Body
        * `email-header` - Email Header
        * `email-subject` - Email Subject
        * `hostname` - Hostname
        * `ip` - Ip
        * `ip-port` - Ip Port
        * `mac-address` - Mac Address
        * `uri` - Uri
        * `url` - Url
        * `user-agent` - User Agent
        * `authentihash` - Authentihash
        * `filename` - Filename
        * `filepath` - Filepath
        * `hash-md5` - Hash Md5
        * `hash-sha1` - Hash Sha1
        * `hash-sha256` - Hash Sha256
        * `hash-sha512` - Hash Sha512
        * `imphash` - Imphash
        * `malware-sample` - Malware Sample
        * `mime-type` - Mime Type
        * `pehash` - Pehash
        * `ssdeep` - Ssdeep
        * `mutex` - Mutex
        * `named-pipe` - Named Pipe
        * `process` - Process
        * `process-state` - Process State
        * `regkey` - Registry
        * `regkey|value` - Registry Value
        * `windows-service-name` - Windows Service
        * `windows-scheduled-task` - Windows Scheduled Task
        * `bank-account-nr` - Bank Account
        * `bic` - Bic
        * `btc` - Bitcoin
        * `cc-number` - Cc Number
        * `iban` - Iban
        * `first-name` - First Name
        * `last-name` - Last Name
        * `full-name` - Full Name
        * `passport-number` - Passport Number
        * `phone-number` - Phone Number
        * `sigma` - Sigma
        * `snort` - Snort
        * `stix2-pattern` - Stix2
        * `yara` - Yara
        * `campaign-name` - Campaign Name
        * `ja3-fingerprint-md5` - Ja3 Fingerprint
        * `threat-actor` - Threat Actor
        * `vulnerability` - Vulnerability
        * `weakness` - Weakness
        * `comment` - Comment
        * `other` - Other
    User:
      type: object
      description: Serializer for User model.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        role:
          $ref: '#/components/schemas/RoleEnum'
        company:
          type: string
          format: uuid
          nullable: true
        company_name:
          type: string
          nullable: true
          readOnly: true
      required:
      - email
      - username
    UserBasic:
      type: object
      description: Minimal user info for related fields.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
    UserLight:
      type: object
      description: Simplified User serializer used in AlertDetailSerializer.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          readOnly: true
    UserLite:
      type: object
      description: |-
        Lightweight serializer for User model with minimal fields.
        Used for references in other serializers.
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
    UserNested:
      type: object
      description: Simplified User serializer used in CompanyDetailSerializer.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
    UserNotificationPreference:
      type: object
      description: Serializer for user notification preferences
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          type: integer
          readOnly: true
        email_alerts:
          type: boolean
        email_incidents:
          type: boolean
        email_tasks:
          type: boolean
        email_reports:
          type: boolean
        in_app_alerts:
          type: boolean
        in_app_incidents:
          type: boolean
        in_app_tasks:
          type: boolean
        in_app_reports:
          type: boolean
        slack_alerts:
          type: boolean
        slack_incidents:
          type: boolean
        slack_tasks:
          type: boolean
        slack_critical_only:
          type: boolean
        sms_critical_only:
          type: boolean
        daily_digest:
          type: boolean
        weekly_digest:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    UserRequest:
      type: object
      description: Serializer for User model.
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/RoleEnum'
        company:
          type: string
          format: uuid
          nullable: true
      required:
      - email
      - username
    VisibilityEnum:
      enum:
      - public
      - private
      type: string
      description: |-
        * `public` - Public
        * `private` - Private
    WebhookChannel:
      type: object
      description: Specialized serializer for webhook notification channels.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        channel_type:
          allOf:
          - $ref: '#/components/schemas/ChannelTypeEnum'
          readOnly: true
        is_enabled:
          type: boolean
        config: {}
        company:
          type: string
          format: uuid
        company_data:
          allOf:
          - $ref: '#/components/schemas/Company'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - channel_type
      - company
      - name
    WebhookChannelRequest:
      type: object
      description: Specialized serializer for webhook notification channels.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        is_enabled:
          type: boolean
        config: {}
        company:
          type: string
          format: uuid
      required:
      - company
      - name
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: Email and Password authentication. Use the endpoint /api/v1/auth/token/email/
        to obtain a token.
    Bearer:
      type: apiKey
      in: header
      name: Authorization
      description: Enter "Bearer" followed by a space and the JWT token
    basicAuth:
      type: http
      scheme: basic
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
- url: /
  description: Current server
tags:
- name: Authentication & Access Control
  description: Endpoints for user login, JWT token handling, and RBAC access policies.
- name: Company Management
  description: Multi-tenant company provisioning, configuration, and statistics.
- name: Alert Management
  description: Security alert lifecycle including creation, triage, classification,
    and correlation.
- name: Incident Management
  description: Case and incident tracking with escalation, investigation, and resolution
    workflow.
- name: Observables & IOCs
  description: Submission, enrichment, tagging, and search of indicators of compromise.
- name: Threat Intelligence (SentinelVision)
  description: Analyzer modules, threat feeds, and automated responders for enrichment
    and action.
- name: Notification System
  description: Notification rules, delivery methods (e-mail, Slack, webhook), and
    logs.
- name: Knowledge Base (Wiki)
  description: Internal documentation including runbooks, categories, and standard
    procedures.
- name: Reporting
  description: Report generation in Markdown or PDF format for audit and evidence
    purposes.
- name: System Monitoring & Operations
  description: Health checks, logs, background tasks, and platform-level diagnostics.
- name: Task Management
  description: Assignment and tracking of security tasks and playbook execution.
- name: MITRE Framework
  description: MITRE ATT&CK framework mapping and threat intelligence correlation.
