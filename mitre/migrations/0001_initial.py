# Generated by Django 5.2 on 2025-05-03 15:13

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("alerts", "0002_initial"),
        ("incidents", "0001_initial"),
        ("observables", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="MitreMitigation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("external_id", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
            ],
            options={
                "verbose_name": "MITRE Mitigation",
                "verbose_name_plural": "MITRE Mitigations",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="MitreTactic",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("external_id", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
            ],
            options={
                "verbose_name": "MITRE Tactic",
                "verbose_name_plural": "MITRE Tactics",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AlertMitreMapping",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("confidence", models.IntegerField(default=50)),
                ("auto_detected", models.BooleanField(default=True)),
                (
                    "alert",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="alerts.alert"
                    ),
                ),
            ],
            options={
                "verbose_name": "Alert MITRE Mapping",
                "verbose_name_plural": "Alert MITRE Mappings",
            },
        ),
        migrations.CreateModel(
            name="IncidentMitreMapping",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("confidence", models.IntegerField(default=100)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "incident",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="incidents.incident",
                    ),
                ),
            ],
            options={
                "verbose_name": "Incident MITRE Mapping",
                "verbose_name_plural": "Incident MITRE Mappings",
            },
        ),
        migrations.CreateModel(
            name="MitreRelationship",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("source_id", models.CharField(max_length=255)),
                ("target_id", models.CharField(max_length=255)),
                ("relationship_type", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "MITRE Relationship",
                "verbose_name_plural": "MITRE Relationships",
                "unique_together": {("source_id", "target_id", "relationship_type")},
            },
        ),
        migrations.CreateModel(
            name="MitreTechnique",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("external_id", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "platforms",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("detection", models.TextField(blank=True, null=True)),
                ("is_subtechnique", models.BooleanField(default=False)),
                (
                    "alerts",
                    models.ManyToManyField(
                        blank=True,
                        related_name="mitre_techniques",
                        through="mitre.AlertMitreMapping",
                        to="alerts.alert",
                    ),
                ),
                (
                    "incidents",
                    models.ManyToManyField(
                        blank=True,
                        related_name="mitre_techniques",
                        through="mitre.IncidentMitreMapping",
                        to="incidents.incident",
                    ),
                ),
                (
                    "parent_technique",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subtechniques",
                        to="mitre.mitretechnique",
                    ),
                ),
                (
                    "tactics",
                    models.ManyToManyField(
                        related_name="techniques", to="mitre.mitretactic"
                    ),
                ),
            ],
            options={
                "verbose_name": "MITRE Technique",
                "verbose_name_plural": "MITRE Techniques",
                "ordering": ["external_id"],
            },
        ),
        migrations.CreateModel(
            name="MitreMitigationMapping",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "mitigation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mitre.mitremitigation",
                    ),
                ),
                (
                    "technique",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mitre.mitretechnique",
                    ),
                ),
            ],
            options={
                "verbose_name": "MITRE Mitigation Mapping",
                "verbose_name_plural": "MITRE Mitigation Mappings",
                "unique_together": {("technique", "mitigation")},
            },
        ),
        migrations.AddField(
            model_name="mitremitigation",
            name="techniques",
            field=models.ManyToManyField(
                blank=True,
                related_name="mitigations",
                through="mitre.MitreMitigationMapping",
                to="mitre.mitretechnique",
            ),
        ),
        migrations.AddField(
            model_name="incidentmitremapping",
            name="technique",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="mitre.mitretechnique"
            ),
        ),
        migrations.AddField(
            model_name="alertmitremapping",
            name="technique",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="mitre.mitretechnique"
            ),
        ),
        migrations.CreateModel(
            name="ObservableMitreMapping",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("confidence", models.IntegerField(default=70)),
                ("auto_detected", models.BooleanField(default=True)),
                (
                    "observable",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="observables.observable",
                    ),
                ),
                (
                    "technique",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mitre.mitretechnique",
                    ),
                ),
            ],
            options={
                "verbose_name": "Observable MITRE Mapping",
                "verbose_name_plural": "Observable MITRE Mappings",
                "unique_together": {("observable", "technique")},
            },
        ),
        migrations.AddField(
            model_name="mitretechnique",
            name="observables",
            field=models.ManyToManyField(
                blank=True,
                related_name="mitre_techniques",
                through="mitre.ObservableMitreMapping",
                to="observables.observable",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="incidentmitremapping",
            unique_together={("incident", "technique")},
        ),
        migrations.AlterUniqueTogether(
            name="alertmitremapping",
            unique_together={("alert", "technique")},
        ),
    ]
