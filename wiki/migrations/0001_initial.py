# Generated by Django 5.2 on 2025-05-02 21:26

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("companies", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="KnowledgeCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                (
                    "slug",
                    models.SlugField(max_length=120, unique=True, verbose_name="Slug"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        help_text="If null, this is a global category visible to all companies",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="knowledge_categories",
                        to="companies.company",
                        verbose_name="Company",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="wiki.knowledgecategory",
                        verbose_name="Parent Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Knowledge Category",
                "verbose_name_plural": "Knowledge Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="KnowledgeArticle",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200, verbose_name="Title")),
                (
                    "slug",
                    models.SlugField(max_length=250, unique=True, verbose_name="Slug"),
                ),
                ("content", models.TextField(verbose_name="Content")),
                (
                    "visibility",
                    models.CharField(
                        choices=[("public", "Public"), ("private", "Private")],
                        default="private",
                        max_length=20,
                        verbose_name="Visibility",
                    ),
                ),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        default=list,
                        size=None,
                        verbose_name="Tags",
                    ),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Published at"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Expires at"
                    ),
                ),
                (
                    "is_reviewed",
                    models.BooleanField(default=False, verbose_name="Reviewed"),
                ),
                (
                    "version",
                    models.PositiveIntegerField(default=1, verbose_name="Version"),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="authored_articles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Author",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        help_text="If null, this is a global article visible to all companies",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="knowledge_articles",
                        to="companies.company",
                        verbose_name="Company",
                    ),
                ),
                (
                    "last_reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_articles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Last Reviewed By",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="articles",
                        to="wiki.knowledgecategory",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Knowledge Article",
                "verbose_name_plural": "Knowledge Articles",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.AddIndex(
            model_name="knowledgecategory",
            index=models.Index(fields=["slug"], name="wiki_knowle_slug_2dd883_idx"),
        ),
        migrations.AddIndex(
            model_name="knowledgecategory",
            index=models.Index(
                fields=["company", "slug"], name="wiki_knowle_company_721ba8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="knowledgearticle",
            index=models.Index(fields=["slug"], name="wiki_knowle_slug_a114be_idx"),
        ),
        migrations.AddIndex(
            model_name="knowledgearticle",
            index=models.Index(
                fields=["company", "visibility"], name="wiki_knowle_company_7347cd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="knowledgearticle",
            index=models.Index(
                fields=["category"], name="wiki_knowle_categor_3a623a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="knowledgearticle",
            index=models.Index(
                fields=["author"], name="wiki_knowle_author__98112b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="knowledgearticle",
            index=models.Index(
                fields=["created_at"], name="wiki_knowle_created_b31e3f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="knowledgearticle",
            index=models.Index(
                fields=["updated_at"], name="wiki_knowle_updated_07df9c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="knowledgearticle",
            index=models.Index(
                fields=["published_at"], name="wiki_knowle_publish_8dcdfd_idx"
            ),
        ),
    ]
